<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:contract5Present="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract,5)"
    xmlns:contract5NotPresent="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractNotPresent(Windows.Foundation.UniversalApiContract,5)"
    xmlns:local="using:Friendica_Mobile"
    xmlns:views="using:Friendica_Mobile.Views"
    xmlns:conv="using:Friendica_Mobile.Converters"
    xmlns:models="using:Friendica_Mobile.Models"
    xmlns:triggers="using:Friendica_Mobile.Triggers"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    x:Class="Friendica_Mobile.Styles.MainStyles" >

    <conv:BoolToPostOpacityConverter x:Key="BoolToPostOpacityConverter" />
    <conv:BoolToNewEntryThicknessConverter x:Key="BoolToNewEntryThicknessConverter" />
    <conv:SplitViewWidthConverter x:Key="SplitViewWidthConverter" />
    <conv:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
    <conv:BoolToVisibilityCollapsedConverter x:Key="BoolToVisibilityCollapsedConverter" />
    <conv:NetworkModeToVisibilityConverter x:Key="NetworkModeToVisibilityConverter" />
    <conv:AddCommentButtonVisibilityConverter x:Key="AddCommentButtonVisibilityConverter" />
    <conv:ShowProfileButtonVisibilityConverter x:Key="ShowProfileButtonVisibilityConverter" />
    <conv:RetweetButtonVisibilityConverter x:Key="RetweetButtonVisibilityConverter" />
    <conv:HtmlToParagraphConverter x:Key="HtmlToParagraphConverter" />
    <conv:FlowDirectionConverter x:Key="FlowDirectionConverter" />

    <SolidColorBrush x:Key="AccentBrush" Color="{ThemeResource SystemAccentColor}" />
    
    <x:Double x:Key="NormalFontSize">16</x:Double>
    <x:Double x:Key="ApplicationNameFontSize">16</x:Double>
    <x:Double x:Key="PageNameFontSize">36</x:Double>
    <x:Double x:Key="SendernameFontSize">16</x:Double>
    <x:Double x:Key="LocationDateFontSize">12</x:Double>
    <x:Double x:Key="UserNameFontSize">20</x:Double>
    <x:Double x:Key="UserUrlFontSize">12</x:Double>
    
    <!-- define style settings for the richtextblock displaying the entries centrally -->
    <x:Double x:Key="RunFontSizeHeader">20</x:Double>
    <x:Double x:Key="RunFontSizeCode">12</x:Double>
    <x:Double x:Key="RunFontSizeCodeFull">14</x:Double>
    <x:Double x:Key="RunFontSizeBlockquote">12</x:Double>

    <Style x:Key="RichEditBoxStyle" TargetType="RichEditBox">
        <Setter Property="MinWidth" Value="{ThemeResource TextControlThemeMinWidth}"/>
        <Setter Property="MinHeight" Value="{ThemeResource TextControlThemeMinHeight}"/>
        <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseHighBrush}"/>
        <Setter Property="Background" Value="{ThemeResource SystemControlBackgroundAltHighBrush}"/>
        <Setter Property="SelectionHighlightColor" Value="{ThemeResource SystemControlHighlightAccentBrush}"/>
        <Setter Property="BorderBrush" Value="{ThemeResource SystemControlForegroundChromeDisabledLowBrush}"/>
        <Setter Property="BorderThickness" Value="{ThemeResource TextControlBorderThemeThickness}"/>
        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
        <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Padding" Value="{ThemeResource TextControlThemePadding}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RichEditBox">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="HeaderContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledBaseLowBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="BackgroundElement">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledTransparentBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="BorderElement">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlBackgroundBaseLowBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="BorderElement">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledBaseLowBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <!--<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentElement">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledChromeDisabledLowBrush}"/>
                                                </ObjectAnimationUsingKeyFrames>-->
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="PlaceholderTextContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledChromeDisabledLowBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="BorderElement">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightChromeAltLowBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundElement">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBackgroundHoverOpacity}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="PlaceholderTextContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlPageTextChromeBlackMediumLowBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="BackgroundElement">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlBackgroundChromeWhiteBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundElement">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBackgroundFocusedOpacity}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="BorderElement">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAccentBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <!--<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentElement">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlForegroundChromeBlackHighBrush}"/>
                                                </ObjectAnimationUsingKeyFrames>-->
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="RequestedTheme" Storyboard.TargetName="ContentElement">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Light"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="BackgroundElement" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" Margin="{TemplateBinding BorderThickness}" Opacity="{ThemeResource TextControlBackgroundRestOpacity}" Grid.Row="1" Grid.RowSpan="1"/>
                        <Border x:Name="BorderElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2" Grid.Row="1" Grid.RowSpan="1"/>
                        <ContentPresenter x:Name="HeaderContentPresenter" Grid.ColumnSpan="2" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Foreground="{ThemeResource SystemControlForegroundBaseHighBrush}" FontWeight="Normal" Margin="0,0,0,8" Grid.Row="0" Visibility="Collapsed" x:DeferLoadStrategy="Lazy"/>
                        <ScrollViewer x:Name="ContentElement" AutomationProperties.AccessibilityView="Raw" HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" IsTabStop="False" IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}" IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}" IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" Grid.Row="1" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}" ZoomMode="Disabled"/>
                        <ContentControl x:Name="PlaceholderTextContentPresenter" Grid.ColumnSpan="2" Content="{TemplateBinding PlaceholderText}" Foreground="{ThemeResource SystemControlPageTextBaseMediumBrush}" IsHitTestVisible="False" IsTabStop="False" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" Grid.Row="1"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TextBlock" x:Key="GenericTextBlockStyle">
        <Setter Property="Margin" Value="4,4,4,4" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="TextWrapping" Value="Wrap" />    
        <Setter Property="FontSize" Value="{ThemeResource NormalFontSize}" />
    </Style>
    
    <Style TargetType="TextBlock" x:Key="ApplicationNameTextBlockStyle" BasedOn="{StaticResource GenericTextBlockStyle}">
        <Setter Property="FontSize" Value="{ThemeResource ApplicationNameFontSize}" />
    </Style>

    <Style TargetType="TextBlock" x:Key="PageNameTextBlockStyle" BasedOn="{StaticResource GenericTextBlockStyle}">
        <Setter Property="FontSize" Value="{ThemeResource PageNameFontSize}" />
        <Setter Property="Foreground" Value="{ThemeResource AccentBrush}" />
    </Style>

    <Style TargetType="TextBlock" x:Key="AboutBoldTextBlockStyle" BasedOn="{StaticResource GenericTextBlockStyle}">
        <Setter Property="FontSize" Value="{ThemeResource NormalFontSize}" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Margin" Value="0,4,0,4" />
    </Style>

    <Style TargetType="TextBlock" x:Key="AboutHeaderTextBlockStyle" BasedOn="{StaticResource AboutBoldTextBlockStyle}">
        <Setter Property="Foreground" Value="{ThemeResource AccentBrush}" />
        <Setter Property="Margin" Value="4,12,4,4" />
    </Style>

    <Style TargetType="TextBlock" x:Key="ProfileHeaderTextBlockStyle" BasedOn="{StaticResource AboutBoldTextBlockStyle}">
        <Setter Property="Foreground" Value="{ThemeResource AccentBrush}" />
        <Setter Property="Margin" Value="4,-4,4,0" />
    </Style>

    <Style TargetType="Grid" x:Key="GenericGridStyle">
        <Setter Property="Background" Value="{ThemeResource ApplicationPageBackgroundThemeBrush}" />
        <Setter Property="Margin" Value="4,4,4,4" />
    </Style>

    <Style TargetType="Grid" x:Key="AboutGridStyle" BasedOn="{StaticResource GenericGridStyle}">
        <Setter Property="Margin" Value="0,0,0,0" />
    </Style>

    <Style TargetType="GridViewItem" x:Key="GenericGridViewItemStyle">
        <Setter Property="Margin" Value="4" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>

    <Style TargetType="ScrollViewer" x:Key="GenericScrollViewerStyle">
        <Setter Property="VerticalScrollMode" Value="Auto" />
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Height" Value="Auto" />
    </Style>

    <!-- increase MaxWidth for Flyout showing the whole code text, standard width is too narrow for Desktop mode -->
    <Style TargetType="FlyoutPresenter" x:Key="FlyoutPresenterCodeFullscreen">
        <Setter Property="MaxWidth" Value="1024" />
    </Style>


    <Style TargetType="FlyoutPresenter" x:Key="FlyoutPresenterImageFullscreen">
        <Setter Property="MinWidth" Value="3000" />
        <Setter Property="MaxWidth" Value="3000" />
        <Setter Property="MinHeight" Value="5000" />
        <Setter Property="MaxHeight" Value="5000" />
    </Style>


    <Style TargetType="Button" x:Key="ButtonColorPicker">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Margin" Value="2" />
    </Style>

    <Style TargetType="CommandBar" x:Key="CommandBarTopStyle">
        <Setter Property="Background" Value="Gray" />
    </Style>
    
    <DataTemplate x:Key="SettingsHeaderTemplate">
        <TextBlock Foreground="{ThemeResource AccentBrush}" 
                   FontSize="16" 
                   FontWeight="Bold"
                   TextWrapping="Wrap"
                   Margin="0,12,0,0">
            <TextBlock.Text>
                <Binding/>
            </TextBlock.Text>
        </TextBlock>
    </DataTemplate>

    <DataTemplate x:Key="FriendicaPostsTemplate">
        <StackPanel>
            <StackPanel Background="{ThemeResource AccentBrush}"
                        Opacity="{Binding IsComment, Converter={StaticResource BoolToPostOpacityConverter}}"
                        Margin="0,4,0,4"
                    Visibility="{Binding IsVisible, Converter={StaticResource BoolToVisibilityConverter}}"
                    Width="{Binding ElementName=listviewNetworkPosts, Path=Width, Converter={StaticResource SplitViewWidthConverter}}">
                <Border x:Name="borderTimeline"
                        BorderBrush="{ThemeResource SystemColorWindowTextColor}"
                        BorderThickness="{Binding NewEntryIndicatorBorder}"
                        Margin="0,0,0,0">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="40" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*" />
                            <ColumnDefinition Width="5*" />
                        </Grid.ColumnDefinitions>

                        <TextBlock Text="{Binding SenderNameConcat}" 
                                   TextWrapping="Wrap"
                                   FontSize="{StaticResource SendernameFontSize}" 
                                   Foreground="White"
                                   FontWeight="Bold"
                                   Margin="0,0,12,8"
                                   Grid.Row="0"
                                   Grid.Column="1" />

                        <RelativePanel Name="DetailsPanel"
                                   Grid.Row="1"
                                   Grid.Column="1"
                                   Margin="0,0,4,8"
                                   VerticalAlignment="Top"
                                   HorizontalAlignment="Right">
                            <TextBlock x:Name="textblockCreatedAtLocalized" 
                                   Text="{Binding CreatedAtLocalized}" 
                                   FontSize="{StaticResource LocationDateFontSize}"
                                   FontStyle="Italic"
                                   Foreground="White"
                                   Margin="12,0,4,0"
                                   RelativePanel.AlignRightWithPanel="True"
                                   RelativePanel.Above="buttonLocation"/>
                            <Button x:Name="buttonLocation"
                                Content="{Binding LocationWithIcon}"
                                FontSize="{StaticResource LocationDateFontSize}"
                                FontStyle="Italic"
                                Foreground="White"
                                Background="Transparent"
                                Padding="0,4,0,4"
                                Margin="12,0,4,0"
                                Visibility="{Binding EntryHasLocation, Converter={StaticResource BoolToVisibilityConverter}}"
                                Command="{Binding LoadMapCommand}"
                                CommandParameter="{Binding}"
                                RelativePanel.AlignRightWithPanel="True"
                                RelativePanel.AlignBottomWithPanel="True">
                            </Button>
                        </RelativePanel>
                        <RelativePanel Name="ImagesPanel"
                                       Grid.Row="0"
                                       Grid.Column="0"
                                       Grid.RowSpan="3">
                            <Image x:Name="imagePostUser" 
                                   Source="{Binding Post.PostUser.User.UserProfileImageUrl}"
                                   Margin="4,4,12,0"
                                   Stretch="Uniform"
                                   VerticalAlignment="Top"
                                   RelativePanel.AlignTopWithPanel="True"
                                   RelativePanel.AlignLeftWithPanel="True"/>

                            <Grid Margin="0,0,4,-8" 
                                  RelativePanel.AlignBottomWith="imagePostUser"
                                  RelativePanel.AlignLeftWithPanel="True"
                                  RelativePanel.AlignRightWithPanel="True">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="2*" />
                                    <ColumnDefinition Width="2*" />
                                </Grid.ColumnDefinitions>

                                <Image x:Name="imageRetweetedPostUser" 
                                       Source="{Binding Post.PostRetweetedStatus.PostUser.User.UserProfileImageUrl}"
                                       Stretch="Uniform"
                                       Grid.Column="1"/>
                            </Grid>
                        </RelativePanel>

                        <StackPanel x:Name="spPostButtons"
                                    Orientation="Horizontal"
                                    Grid.Row="3"
                                    Grid.Column="0"
                                    Grid.ColumnSpan="2"
                                    FlowDirection="{Binding FlowButton}">
                            <TextBlock Width="4" />
                            <!--Button for showing the thread in chronological mode-->
                            <Button x:Name="buttonShowThread" x:Uid="buttonShowThread" 
                                    Command="{Binding ShowThreadCommand}"
                                    Margin="0,0,4,4"
                                    Visibility="{Binding IsVisible, Converter={StaticResource NetworkModeToVisibilityConverter}}" >
                                <FontIcon Glyph="&#xE8BD;"
                                          FontFamily="Segoe MDL2 Assets"
                                          FontSize="16" />
                            </Button>
                            
                            <!-- Button for adding a comment to the selected item -->
                            <Button x:Name="buttonAddComment" x:Uid="buttonAddComment"
                                    Command="{Binding AddCommentCommand}"
                                    Margin="0,0,4,4"
                                    Visibility="{Binding IsVisible, Converter={StaticResource AddCommentButtonVisibilityConverter}}">
                                <FontIcon Glyph="&#xE710;"
                                          FontFamily="Segoe MDL2 Assets"
                                          FontSize="16" />
                            </Button>

                            <!-- Button for showing the profile of the author of the selected item -->
                            <Button x:Name="buttonShowProfile" x:Uid="buttonShowProfile"
                                    Margin="0,0,4,4"
                                    Command="{Binding ShowProfileCommand}"
                                    Visibility="{Binding IsVisible, Converter={StaticResource ShowProfileButtonVisibilityConverter}}">
                                <FontIcon Glyph="&#xEC25;"
                                          FontFamily="Segoe MDL2 Assets"
                                          FontSize="16" />
                            </Button>

                            <!-- Likes/Dislikes des Beitrags -->
                            <StackPanel x:Name="spActivities" x:Uid="spActivities"
                                        Visibility="{Binding ActivitiesNotSupported, Converter={StaticResource BoolToVisibilityCollapsedConverter}}"
                                        Orientation="Horizontal">
                                <Button Background="Transparent"
                                        Margin="0,0,4,4">
                                    <StackPanel Orientation="Horizontal">
                                        <Grid>
                                            <!-- Icon in blue if already liked -->
                                            <FontIcon Glyph="&#xE19F;"
                                                      FontWeight="ExtraBold"
                                                      Foreground="DeepSkyBlue"
                                                      FontFamily="Segoe MDL2 Assets"
                                                      Visibility="{Binding IsLikedByMe, Converter={StaticResource BoolToVisibilityConverter}}"
                                                      FontSize="16" />
                                            <!-- Icon in white if not yet liked -->
                                            <FontIcon Glyph="&#xE19F;"
                                                      FontWeight="ExtraBold"
                                                      Foreground="White"
                                                      FontFamily="Segoe MDL2 Assets"
                                                      Visibility="{Binding IsLikedByMe, Converter={StaticResource BoolToVisibilityCollapsedConverter}}"
                                                      FontSize="16" />
                                            <!-- progress during updating server with like -->
                                            <ProgressRing IsActive="{Binding IsUpdatingLikes}"
                                                          Foreground="White"/>
                                        </Grid>
                                        <TextBlock Text="{Binding CountLikes}"
                                                   Foreground="White"/>
                                    </StackPanel>
                                    <!-- flyout shown when user taps on like icon -->
                                    <Button.Flyout>
                                        <Flyout Placement="Bottom">
                                            <StackPanel>
                                                <Button x:Name="buttonLike" x:Uid="buttonLike" 
                                                        HorizontalAlignment="Center"
                                                        Visibility="{Binding IsLikedByMe, Converter={StaticResource BoolToVisibilityCollapsedConverter}}"
                                                        Command="{Binding LikeCommand}"
                                                        Background="Transparent"/>
                                                <Button x:Name="buttonUnLike" x:Uid="buttonUnLike"
                                                        HorizontalAlignment="Center"
                                                        Visibility="{Binding IsLikedByMe, Converter={StaticResource BoolToVisibilityConverter}}"
                                                        Command="{Binding LikeCommand}"
                                                        Background="Transparent" />
                                                <Border BorderBrush="White"
                                                        Margin="0,4,0,0"
                                                        BorderThickness="0,2,0,0" />
                                                <ListView x:Name="listviewLikes"
                                                          ItemsSource="{Binding LikesForDisplay}"
                                                          SelectionMode="None"
                                                          ItemTemplate="{StaticResource FriendicaActivitiesUser}" />
                                            </StackPanel>
                                        </Flyout>
                                    </Button.Flyout>
                                </Button>
                                <Button Background="Transparent"
                                        Margin="0,0,4,4">
                                    <StackPanel Orientation="Horizontal">
                                        <Grid>
                                            <!-- Icon in blue if already disliked -->
                                            <FontIcon Glyph="&#xE19E;"
                                                      FontWeight="ExtraBold"
                                                      Foreground="DeepSkyBlue"
                                                      Visibility="{Binding IsDislikedByMe, Converter={StaticResource BoolToVisibilityConverter}}"
                                                      FontFamily="Segoe MDL2 Assets"
                                                      FontSize="16" />
                                            <!-- Icon in white if not yet already disliked -->
                                            <FontIcon Glyph="&#xE19E;"
                                                      FontWeight="ExtraBold"
                                                      Foreground="White"
                                                      Visibility="{Binding IsDislikedByMe, Converter={StaticResource BoolToVisibilityCollapsedConverter}}"
                                                      FontFamily="Segoe MDL2 Assets"
                                                      FontSize="16" />
                                            <!-- progress during updating server with dislike -->
                                            <ProgressRing IsActive="{Binding IsUpdatingDislikes}"
                                                          Foreground="White"/>
                                        </Grid>
                                        <TextBlock Text="{Binding CountDislikes}"
                                                       Foreground="White"/>
                                    </StackPanel>
                                    <!-- flyout shown when user taps on like icon -->
                                    <Button.Flyout>
                                        <Flyout Placement="Bottom">
                                            <StackPanel>
                                                <Button x:Name="buttonDislike" x:Uid="buttonDislike" 
                                                        HorizontalAlignment="Center"
                                                        Visibility="{Binding IsDislikedByMe, Converter={StaticResource BoolToVisibilityCollapsedConverter}}"
                                                        Command="{Binding DislikeCommand}"
                                                        Background="Transparent"/>
                                                <Button x:Name="buttonUnDislike" x:Uid="buttonUnDislike"
                                                        HorizontalAlignment="Center"
                                                        Visibility="{Binding IsDislikedByMe, Converter={StaticResource BoolToVisibilityConverter}}"
                                                        Command="{Binding DislikeCommand}"
                                                        Background="Transparent" />
                                                <Border BorderBrush="White"
                                                        Margin="0,4,0,0"
                                                        BorderThickness="0,2,0,0" />
                                                <ListView x:Name="listviewDislikes"
                                                          ItemsSource="{Binding DislikesForDisplay}"
                                                          SelectionMode="None"
                                                          ItemTemplate="{StaticResource FriendicaActivitiesUser}" />
                                            </StackPanel>
                                        </Flyout>
                                    </Button.Flyout>
                                </Button>
                            </StackPanel>
                        </StackPanel>

                        <RichTextBlock x:Name="rtbContent"
                                   local:RichTextBlockHelper.Content="{Binding ContentTransformed}"
                                       Grid.Row="2"
                                       Grid.Column="1"
                                       Margin="0,0,4,4"
                                   Foreground="White"
                                   IsTextSelectionEnabled="False" />

                    </Grid>
                </Border>
            </StackPanel>
            <ToggleSwitch x:Name="sliderShowMorePosts" x:Uid="sliderShowMorePosts"
                          IsOn="{Binding ToggleShowCommentsState, Mode=TwoWay}"
                          Visibility="{Binding IsPostWithComments, Converter={StaticResource BoolToVisibilityConverter}}" />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="FriendicaActivitiesUser">
        <StackPanel Visibility="{Binding IsAuthenticatedUser, Converter={StaticResource BoolToVisibilityCollapsedConverter}}">
            <!-- opening profile page of the user in integrated browser -->
            <Button x:Name="buttonShowProfile" x:Uid="buttonShowProfile"
                    Background="Transparent"
                    contract5Present:Style="{ThemeResource ButtonRevealStyle}"
                    Command="{Binding ShowProfileLikeCommand}"
                    CommandParameter="{Binding}">
                <StackPanel Orientation="Horizontal">
                    <FontIcon Glyph="&#xEC25;" FontSize="16" Margin="4,4,4,4"/>
                    <TextBlock Text="{Binding User.UserName}" />
                </StackPanel>
            </Button>
        </StackPanel>
    </DataTemplate>
    
    
    <DataTemplate x:Key="FriendicaThreadsTemplate">
        <StackPanel>
            <StackPanel Orientation="Horizontal"
                        Visibility="{Binding IsLoaded, Converter={StaticResource BoolToVisibilityCollapsedConverter}}" >
            <ProgressRing x:Name="progressThreadLoading"
                          IsActive="True" 
                          Margin="8,0,8,0"/>
                <TextBlock x:Name="textblockThreadLoading" x:Uid="textblockThreadLoading" />                           
            </StackPanel>
            <ListView x:Name="listviewThread" x:Uid="listviewThread"
                      ItemsSource="{Binding PostsDisplay}"
                      Margin="-12,0,0,0"
                      SelectedItem="{Binding SelectedItem, Mode=TwoWay}"
                      ItemTemplate="{StaticResource FriendicaPostsTemplate}" />
            <Rectangle Fill="DarkGray" Height="8" HorizontalAlignment="Stretch"
                       Margin="0,8,0,24"/>
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="FriendicaUserTemplate">
        <Button Background="Transparent">
            <Button.Flyout>
                <Flyout>
                    <StackPanel Orientation="Vertical"
                                MaxWidth="300">
                        <!-- opening profile page of the user in integrated browser -->
                        <Button x:Name="buttonShowProfile" x:Uid="buttonShowProfile"
                                Background="Transparent"
                                Command="{Binding ShowProfileCommand}">
                            <StackPanel Orientation="Horizontal">
                                <FontIcon Glyph="&#xEC25;" FontSize="16"
                                          Margin="4,4,4,4"/>
                                <TextBlock x:Name="textblockShowProfile" x:Uid="textblockShowProfile" />
                            </StackPanel>
                        </Button>
                        
                </StackPanel>
                </Flyout>
            </Button.Flyout>
            
                <Button.Content>
                <Grid Width="260"
              HorizontalAlignment="Left">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*" />
                        <ColumnDefinition Width="4*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <Image x:Name="imageUser" 
                   Source="{Binding User.UserProfileImageUrl}"
                   Margin="4,4,4,4"
                   Stretch="Uniform"
                   VerticalAlignment="Top"
                   HorizontalAlignment="Left"
                   Grid.Row="0" Grid.Column="0"
                   Grid.RowSpan="2"/>
                <TextBlock Text="{Binding User.UserName}" 
                       TextWrapping="Wrap"
                       FontSize="{StaticResource UserNameFontSize}" 
                       FontWeight="Bold"
                       Grid.Row="0"
                       Grid.Column="1"
                       Margin="4,0,4,0"/>
            <TextBlock Text="{Binding User.UserUrl}"
                       TextWrapping="Wrap"
                       FontSize="{StaticResource UserUrlFontSize}"
                       FontWeight="Light"
                       FontStyle="Italic"
                       Grid.Row="1"
                       Grid.Column="1" 
                       Margin="4,0,4,16" />
                </Grid>
            </Button.Content>
            </Button>


    </DataTemplate>

    <DataTemplate x:Key="FriendicaUserTemplateShort">
        <Grid Width="260"
              HorizontalAlignment="Left">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="4*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <Image x:Name="imageUser" 
                   Source="{Binding User.UserProfileImageUrl}"
                   Margin="4,4,4,4"
                   Stretch="Uniform"
                   VerticalAlignment="Top"
                   HorizontalAlignment="Left"
                   Grid.Row="0" Grid.Column="0"/>
            <TextBlock Text="{Binding User.UserName}" 
                       TextWrapping="Wrap"
                       VerticalAlignment="Center"
                       FontWeight="Normal"
                       FontSize="{StaticResource SendernameFontSize}" 
                       Grid.Row="0" Grid.Column="1"
                       Margin="4,0,48,0"/>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="FriendicaUserTemplateACL">
        <Grid Width="260"
              HorizontalAlignment="Left">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="9*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <Image x:Name="imageUser" 
                   Source="{Binding User.UserProfileImageUrl}"
                   Margin="0"
                   Stretch="Uniform"
                   VerticalAlignment="Top"
                   HorizontalAlignment="Left"
                   Grid.Row="0" Grid.Column="0"/>
            <TextBlock Text="{Binding User.UserName}" 
                       TextWrapping="Wrap"
                       VerticalAlignment="Center"
                       FontWeight="Normal"
                       FontSize="{StaticResource SendernameFontSize}" 
                       Grid.Row="0" Grid.Column="1"
                       Margin="4,0,48,0"/>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="GridViewHeaderTemplate">
        <Grid Background="{ThemeResource  AccentBrush}" 
              Margin="0"
              Width="48" 
              Height="48">
            <TextBlock Text="{Binding Key}"
                       FontSize="24"
                       Foreground="White"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center"
                       Margin="10"/>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="GridViewZoomOutHeaderTemplate">
        <Grid Background="{ThemeResource AccentBrush}" 
              Margin="0"
              Width="48" 
              Height="48">
            <TextBlock Text="{Binding Group.Key}"
                       FontSize="24"
                       Foreground="White"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center"
                       Margin="10"/>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="FriendicaGroupTemplate">
        <Border BorderThickness="0,0,0,0"
                Margin="-12,4,4,4"
                BorderBrush="{StaticResource AccentBrush}">
            <Grid Width="260"
                  MinHeight="48"
              HorizontalAlignment="Left">
                <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="48" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="48" />
                    </Grid.ColumnDefinitions>

                <Button Grid.Column="0"
                        Command="{Binding ChangeGroupCommand}"
                        CommandParameter="{Binding}"
                        Background="{StaticResource AccentBrush}"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch">
                <FontIcon Glyph="&#xE125;" FontSize="16" 
                              Foreground="White"
                              VerticalAlignment="Center"
                              HorizontalAlignment="Center"/>
                </Button>

                <Button Grid.Column="1"
                        Background="Transparent"
                        Command="{Binding ChangeGroupCommand}"
                        CommandParameter="{Binding}"
                        HorizontalContentAlignment="Left"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch">
                <TextBlock Text="{Binding GroupName}" 
                       TextWrapping="Wrap"
                       VerticalAlignment="Center"
                           HorizontalAlignment="Left"
                       FontSize="{StaticResource NormalFontSize}" 
                       Margin="4,0,4,0"/>
                </Button>
                
                <Button Background="Red"
                            Grid.Column="2"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Command="{Binding DeleteGroupCommand}" 
                            CommandParameter="{Binding}">
                    <FontIcon Glyph="&#xE74D;" FontSize="16" 
                      Grid.Column="2"
                      VerticalAlignment="Center"
                      HorizontalAlignment="Center"/>
                </Button>
                    

                </Grid>
            </Border>
    </DataTemplate>

    <DataTemplate x:Key="FriendicaGroupTemplateACL">
        <Grid Width="260"
              HorizontalAlignment="Left">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="9*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <FontIcon Glyph="&#xE125;" FontSize="16" 
                      Foreground="White"
                      Margin="0"
                      VerticalAlignment="Center"
                      HorizontalAlignment="Center"
                      Grid.Row="0" Grid.Column="0" />

            <TextBlock Text="{Binding GroupName}" 
                       TextWrapping="Wrap"
                       VerticalAlignment="Center"
                       FontWeight="Normal"
                       FontSize="{StaticResource NormalFontSize}" 
                       Grid.Row="0" Grid.Column="1"
                       Margin="4,0,4,0"/>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="FriendicaProfileSelector">
        <Grid Margin="0,-8,0,-8">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="9*" />
            </Grid.ColumnDefinitions>
            
            <Image x:Name="imageProfilePhotoSelector" 
                   Grid.Column="0"
                   Height="40"
                   HorizontalAlignment="Center"
                   Source="{Binding ProfileThumb}" />
            <TextBlock x:Name="textblockProfileNameSelector" 
                       Grid.Column="1"
                       Margin="8,0,0,0"
                       VerticalAlignment="Center"
                       Text="{Binding ProfileName}" />
        </Grid>
    </DataTemplate>


    <Style x:Key="RadioButtonStyleNormal" TargetType="RadioButton">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseHighBrush}"/>
        <Setter Property="Padding" Value="8,6,0,0"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
        <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
        <Setter Property="MinWidth" Value="120"/>
        <Setter Property="UseSystemFocusVisuals" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Grid BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="20"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="OuterEllipse">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightBaseHighBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="CheckOuterEllipse">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAccentBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="CheckOuterEllipse">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightTransparentBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="CheckGlyph">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="OuterEllipse">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightBaseMediumBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="CheckOuterEllipse">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightBaseMediumBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="CheckOuterEllipse">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightTransparentBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="CheckGlyph">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseMediumBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="OuterEllipse">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledBaseLowBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="CheckOuterEllipse">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledBaseLowBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="CheckOuterEllipse">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Transparent"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="CheckGlyph">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledBaseLowBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledBaseLowBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CheckGlyph"/>
                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="OuterEllipse"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CheckOuterEllipse"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked"/>
                                <VisualState x:Name="Indeterminate"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid Height="32" VerticalAlignment="Top">
                            <Ellipse x:Name="OuterEllipse" Height="20" Stroke="{ThemeResource SystemControlForegroundBaseMediumHighBrush}" StrokeThickness="{ThemeResource RadioButtonBorderThemeThickness}" UseLayoutRounding="False" Width="20"/>
                            <Ellipse x:Name="CheckOuterEllipse" Fill="{ThemeResource SystemControlHighlightTransparentBrush}" Height="20" Opacity="0" Stroke="{ThemeResource SystemControlHighlightAltAccentBrush}" StrokeThickness="{ThemeResource RadioButtonBorderThemeThickness}" UseLayoutRounding="False" Width="20"/>
                            <Ellipse x:Name="CheckGlyph" Fill="{ThemeResource SystemControlHighlightAltBaseMediumHighBrush}" Height="10" Opacity="0" UseLayoutRounding="False" Width="10"/>
                        </Grid>
                        <ContentPresenter x:Name="ContentPresenter" AutomationProperties.AccessibilityView="Raw" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Content="{TemplateBinding Content}" Grid.Column="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" TextWrapping="Wrap" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    

    
    
    

</ResourceDictionary>
