<?xml version="1.0" encoding="UTF-8"?>
<styles:BaseContentPage xmlns="http://xamarin.com/schemas/2014/forms" 
                        xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml" 
                        xmlns:vm="clr-namespace:Friendica_Mobile.ViewModel"
                        xmlns:i18n="clr-namespace:Friendica_Mobile"
                        xmlns:controls="clr-namespace:SeeberXamarin.Controls"
                        xmlns:styles="clr-namespace:Friendica_Mobile.Styles"
                        x:Class="Friendica_Mobile.Views.Settings">

    <ContentPage.BindingContext>
        <vm:SettingsViewModel />
    </ContentPage.BindingContext>
    
    <styles:BaseContentPage.PageContent>
        <Grid>
            <controls:CustomTabView>
              <controls:CustomTabView.TabViewItems>
                    <controls:CustomTabViewItem Header="{i18n:Translate pivotSettingsGeneral_Header}"
                                            IsActiveTab="true">
                        <controls:CustomTabViewItem.TabContent>
                            <!-- UI elements for general settings -->
                            <StackLayout x:Name="StackGeneral" 
                                         Orientation="Vertical"
                                         Margin="0,0,0,24"
                                         Spacing="0" >
                                <StackLayout x:Name="StackGeneralLogin"
                                             Margin="0,0,0,24">
                                    <!-- Friendica Server entry -->
                                    <Label Text="{i18n:Translate textboxFriendicaServer_Header}"
                                           Style="{StaticResource LabelHeader1}" />
                                    <Entry x:Name="EntryFriendicaServer"
                                           Keyboard="Url"
                                           WidthRequest="250"
                                           Placeholder="https://   http://"
                                           Completed="EntryFriendicaServer_Completed"
                                           Text="{Binding FriendicaServer}" />
                                    <controls:CustomHintLabel x:Name="LabelFriendicaServerHint"
                                                              HintType="{Binding FriendicaServerHint}">
                                        <Label.Triggers>
                                            <Trigger TargetType="controls:CustomHintLabel"
                                                     Property="HintType" Value="Standard">
                                                <Setter Property="Text" Value="{i18n:Translate FriendicaServerHint}" />
                                                <Setter Property="TextColor" Value="{DynamicResource MainTextColor}" />
                                            </Trigger>
                                            <Trigger TargetType="controls:CustomHintLabel"
                                                     Property="HintType" Value="Empty">
                                                <Setter Property="Text" Value="{i18n:Translate FriendicaServerHintEmpty}" />
                                                <Setter Property="TextColor" Value="Red" />
                                            </Trigger>
                                            <Trigger TargetType="controls:CustomHintLabel"
                                                     Property="HintType" Value="EndingSlash">
                                                <Setter Property="Text" Value="{i18n:Translate FriendicaServerHintEndingSlash}" />                                            
                                                <Setter Property="TextColor" Value="#FFD700" />
                                            </Trigger>
                                            <Trigger TargetType="controls:CustomHintLabel"
                                                     Property="HintType" Value="OnlyHttp">
                                                <Setter Property="Text" Value="{i18n:Translate FriendicaServerHintOnlyHttp}" />                                            
                                                <Setter Property="TextColor" Value="Red" />
                                            </Trigger>
                                            <Trigger TargetType="controls:CustomHintLabel"
                                                     Property="HintType" Value="WrongStart">
                                                <Setter Property="Text" Value="{i18n:Translate FriendicaServerHintWrongStart}" />                                            
                                                <Setter Property="TextColor" Value="Red" />
                                            </Trigger>
                                            <Trigger TargetType="controls:CustomHintLabel"
                                                     Property="HintType" Value="NoHttps">
                                                <Setter Property="Text" Value="{i18n:Translate FriendicaServerHintNoHttps}" />                                            
                                                <Setter Property="TextColor" Value="#FFD700" />
                                            </Trigger>
                                        </Label.Triggers>
                                    </controls:CustomHintLabel>

                                    <!-- Friendica Username entry -->
                                    <Label Text="{i18n:Translate textboxFriendicaUsername_Header}"
                                           Style="{StaticResource LabelHeader1}" />
                                    <Entry x:Name="EntryFriendicaUsername"
                                           Keyboard="Email"
                                           WidthRequest="250"
                                           Completed="EntryFriendicaUsername_Completed"
                                           Text="{Binding FriendicaUsername}" />
                                    <controls:CustomHintLabel x:Name="LabelFriendicaUsernameHint"
                                                              HintType="{Binding FriendicaUsernameHint}">
                                        <Label.Triggers>
                                            <Trigger TargetType="controls:CustomHintLabel"
                                                     Property="HintType" Value="Standard">
                                                <Setter Property="Text" Value="{i18n:Translate FriendicaUsernameHint}" />
                                                <Setter Property="TextColor" Value="{DynamicResource MainTextColor}" />
                                            </Trigger>
                                            <Trigger TargetType="controls:CustomHintLabel"
                                                     Property="HintType" Value="Empty">
                                                <Setter Property="Text" Value="{i18n:Translate FriendicaUsernameHintEmpty}" />
                                                <Setter Property="TextColor" Value="Red" />
                                            </Trigger>
                                        </Label.Triggers>
                                    </controls:CustomHintLabel>

                                    <!-- Friendica Password entry -->
                                    <Label Text="{i18n:Translate textboxFriendicaPassword_Header}"
                                           Style="{StaticResource LabelHeader1}" />
                                    <Entry x:Name="EntryFriendicaPassword"
                                           Keyboard="Default"
                                           IsPassword="true"
                                           WidthRequest="250"
                                           Completed="EntryFriendicaPassword_Completed"
                                           Text="{Binding FriendicaPassword}" />
                                    <controls:CustomHintLabel x:Name="LabelFriendicaPasswordHint"
                                                              HintType="{Binding FriendicaPasswordHint}">
                                        <Label.Triggers>
                                            <Trigger TargetType="controls:CustomHintLabel"
                                                     Property="HintType" Value="Standard">
                                                <Setter Property="Text" Value="{i18n:Translate FriendicaPasswordHint}" />
                                                <Setter Property="TextColor" Value="{DynamicResource MainTextColor}" />
                                            </Trigger>
                                            <Trigger TargetType="controls:CustomHintLabel"
                                                     Property="HintType" Value="Empty">
                                                <Setter Property="Text" Value="{i18n:Translate FriendicaPasswordHintEmpty}" />
                                                <Setter Property="TextColor" Value="Red" />
                                            </Trigger>
                                        </Label.Triggers>
                                    </controls:CustomHintLabel>

                                    <!-- buttons to test or reset credentials -->
                                    <Grid Margin="0,12,0,0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                    
                                        <controls:CustomButton x:Name="ButtonTestConnection"
                                                               Grid.Column="0"
                                                               Text="{i18n:Translate buttonTestConnection_Content}"
                                                               Command="{Binding TestConnectionCommand}" />
                                        <controls:CustomButton x:Name="ButtonResetCredentials"
                                                               Grid.Column="1"
                                                               Text="{i18n:Translate ButtonSettingsResetCredentials}"
                                                               Command="{Binding ResetCredentialsCommand}"/>
                                    </Grid>

                                    <!-- show results of connection test -->
                                    <Grid x:Name="GridTestConnectionResult"
                                          IsVisible="{Binding TestConnectionResultVisible}" >
                                        <Label x:Name="TestConnectionResultFailed"
                                               FontAttributes="Bold, Italic"
                                               IsVisible="{Binding ServerActivityFailed}"
                                               TextColor="Red"
                                               Text="{Binding LabelServerActivityFailed}" />
                                        <Label x:Name="TestConnectionResultSuccess"
                                               FontAttributes="Bold, Italic"
                                               IsVisible="{Binding ServerActivityFailed, Converter={StaticResource NegateBool}}"
                                               TextColor="Green"
                                               Text="{i18n:Translate TestConnectionResultOK}" />   
                                    </Grid>

                                    <!-- set application theme -->
                                    <Label x:Name="LabelAppThemeHeader"
                                           Text="{i18n:Translate LabelSettingsAppThemeHeader}"
                                           Style="{StaticResource LabelHeader1}"
                                           Margin="0, 36, 0, 0"/>
                                    <!-- switch to enable manual override or use system theme -->
                                    <StackLayout Orientation="Horizontal">
                                        <controls:CustomSwitch x:Name="SwitchAppThemeUseSystemTheme"
                                                             IsEnabled="true"
                                                             IsToggled="{Binding IsUsingSystemTheme}"
                                                             IsVisible="true" />
                                        <Label x:Name="LabelSwitchAppThemeSystem"
                                               VerticalOptions="Center"
                                               Text="{i18n:Translate LabelSettingsAppThemeUseSystemTheme}" />
                                    </StackLayout>
                                    <!-- switch to enable dark mode or light mode -->
                                    <StackLayout Orientation="Horizontal"
                                                 Margin="48,0,0,0">
                                        <controls:CustomSwitch x:Name="SwitchAppThemeDarkModeEnabled"
                                                             IsToggled="{Binding IsDarkModeEnabled}"
                                                             IsVisible="{Binding Source={x:Reference Name=SwitchAppThemeUseSystemTheme}, Path=IsToggled, Converter={StaticResource NegateBool} }" />
                                        <Label x:Name="LabelSwitchDarkModeEnable" 
                                               VerticalOptions="Center"
                                               IsVisible="{Binding Source={x:Reference Name=SwitchAppThemeUseSystemTheme}, Path=IsToggled, Converter={StaticResource NegateBool}}"
                                               Text="{i18n:Translate LabelSettingsAppThemeDarkMode}" />
                                    </StackLayout>

                                    <!-- set navigaton on right or left side -->
                                    <StackLayout x:Name="StackLayoutNavigationSide"
                                                 IsVisible="{Binding IsNavigationSideVisible}">
                                        <Label x:Name="LabelNavigationSideHeader"
                                               Text="{i18n:Translate sliderNavigationSide_Header}"
                                               Style="{StaticResource LabelHeader1}" />
                                        <StackLayout Orientation="Horizontal">
                                            <controls:CustomSwitch x:Name="SwitchNavigationSide"
                                                                 IsToggled="{Binding IsNavigationOnRightSide}" />
                                            <Label x:Name="LabelSwitchNavigationSide"
                                                   VerticalOptions="Center"
                                                   Text="{Binding LabelNavigationSide}" />
                                        </StackLayout>
                                    </StackLayout>
                                    
                                    <!-- picker to select the start page for the app -->
                                    <Label x:Name="LabelStartPageHeader"
                                           Text="{i18n:Translate comboboxStartPage_Header}"
                                           Style="{StaticResource LabelHeader1}" />
                                    <Picker x:Name="PickerStartPage"
                                            Title="{i18n:Translate comboboxStartPage_Header}"
                                            SelectedIndex="{Binding StartPage}" />
                                </StackLayout>

                                <!-- part showing the ACL settings - below on phones, right of the others on desktops -->
                                <StackLayout x:Name="StackGeneralACL"
                                             Margin="0,0,0,24">
                                    <!-- header for the ACL settings -->
                                    <Label x:Name="LabelDefaultACLPosts"
                                           Text="{i18n:Translate textblockAccessRightsHeader_Text}"
                                           Style="{StaticResource LabelHeader1}" />

                                    <!-- Radio buttons to select public or private posts as default setting -->
                                    <controls:CustomRadioButtonGroup x:Name="RadioButtonDefaultACLPosts"
                                                                     IsBordered="False"
                                                                     CanDeselectAll="True"
                                                                     SelectedIndex="{Binding DefaultACLPosts}">
                                        <controls:CustomRadioButtonGroup.RadioButtons>
                                            <controls:CustomRadioButton x:Name="RadioButtonPublicPost"
                                                                        ItemName="PublicPost"
                                                                        Text="{i18n:Translate radiobuttonPublicPost_Content}" />
                                            <controls:CustomRadioButton x:Name="RadioButtonPrivatePost"
                                                                        ItemName="PrivatePost"
                                                                        Text="{i18n:Translate radiobuttonPrivatePost_Content}" />
                                        </controls:CustomRadioButtonGroup.RadioButtons>
                                    </controls:CustomRadioButtonGroup>

                                    <!-- show details if user wants to default to private posts (can select users and groups) -->
                                    <StackLayout x:Name="StackPrivateACLDetails"
                                                 IsVisible="{Binding IsPrivateACLVisible}">
                                        <!-- label if loading data has failed -->
                                        <StackLayout x:Name="StackLabelErrorMessage"
                                                     IsVisible="{Binding IsListViewsVisible, Converter={StaticResource NegateBool}}">
                                            <Label x:Name="LabelErrorMessage"
                                                   Text="{Binding LabelServerActivityFailed}"
                                                   TextColor="Maroon"
                                                   FontAttributes="Italic" />
                                            <!-- in some case we will add a button to reload -->
                                            <controls:CustomButton x:Name="ButtonReload"
                                                                   IsVisible="{Binding IsButtonReloadVisible}"
                                                                   Text="{i18n:Translate ButtonSettingsReloadContacts}"
                                                                   Command="{Binding ReloadContactsCommand}" />
                                        </StackLayout>

                                        <!-- list box with contacts and groups for default private posts settings -->
                                        <ListView x:Name="ListViewContacts"
                                                  ItemsSource="{Binding Friends}"
                                                  Margin="48,0,0,0"
                                                  IsVisible="{Binding IsListViewsVisible}"
                                                  HorizontalOptions="StartAndExpand"
                                                  ItemSelected="ListViewContacts_ItemSelected"
                                                  ItemTemplate="{StaticResource TemplateListViewSettingsContacts}"
                                                  HeightRequest="150" />
                                        
                                        <ListView x:Name="ListViewGroups"
                                                  ItemsSource="{Binding Groups}"
                                                  Margin="48,0,0,0"
                                                  IsVisible="{Binding IsListViewsVisible}"
                                                  HorizontalOptions="StartAndExpand"
                                                  ItemSelected="ListViewGroups_ItemSelected"
                                                  ItemTemplate="{StaticResource TemplateListViewSettingsGroups}"
                                                  HeightRequest="150" /> 
                                    </StackLayout>
                                    
                                        <!-- button to reset settings back to ex-works state -->
                                        <Label Text="{i18n:Translate LabelSettingsResetComplete}"
                                           Style="{StaticResource LabelHeader1}" />
                                        <controls:CustomButton x:Name="ButtonResetSettings"
                                                               Text="{i18n:Translate ButtonSettingsResetComplete}"
                                                               Command="{Binding ResetSettingsCommand}" />
                                </StackLayout>
                            </StackLayout>
                        </controls:CustomTabViewItem.TabContent>
                    </controls:CustomTabViewItem>

                    <controls:CustomTabViewItem Header="{i18n:Translate pivotSettingsPrivacy_Header}">
                        <controls:CustomTabViewItem.TabContent>
                            <!-- UI elements for privacy settings -->
                            <StackLayout Margin="0,0,0,24">
                                <!-- button to deactivate advertising -->
                                <Label Text="{i18n:Translate textBlockSettingsRemoveAdvertisingHeader_Text}"
                                       Style="{StaticResource LabelHeader1}" />
                                <controls:CustomButton x:Name="ButtonRemoveAdvertising"
                                                       Text="{i18n:Translate buttonSettingsRemoveAdvertising_Content}"
                                                       PropertyChanged="Button_PropertyChanged"
                                                       Command="{Binding RemoveAdvertisingCommand}" />
                                <!-- TODO: shall we add a comment here that iap income will be donated -->

                                <!-- toggle to disable local saving of data in app storage -->
                                <Label Text="{i18n:Translate sliderSaveLocalAllowed_Header}"
                                       Style="{StaticResource LabelHeader1}" />
                                <StackLayout Orientation="Horizontal">
                                    <controls:CustomSwitch x:Name="SwitchSaveLocalAllowed"
                                                           HorizontalOptions="Start"
                                                           IsToggled="{Binding SaveLocalAllowed}" />
                                    <Label Text="{i18n:Translate TextSettingsDefaultOn}"
                                           PropertyChanged="Label_PropertyChanged"
                                           FontAttributes="Italic"
                                           VerticalOptions="Center"
                                           VerticalTextAlignment="Center"
                                           FontSize="12" />
                                </StackLayout>
                                <Label Text="{i18n:Translate textblockSaveLocalAllowedHint_Text}"
                                       PropertyChanged="Label_PropertyChanged" />
                                <Label Text="{i18n:Translate textblockSettingsSaveLocalAllowedHint2_Text}"
                                       PropertyChanged="Label_PropertyChanged"/>
                                <StackLayout Orientation="Horizontal">
                                    <controls:CustomSwitch x:Name="SwitchSaveFullsizePhotosAllowed"
                                                           Margin="48,0,0,0"
                                                           HorizontalOptions="Start"
                                                           IsVisible="{Binding SaveLocalAllowed}"
                                                           IsToggled="{Binding SaveFullsizePhotosAllowed}" />
                                    <Label Text="{i18n:Translate TextSettingsDefaultOff}"
                                           PropertyChanged="Label_PropertyChanged"
                                           FontAttributes="Italic"
                                           VerticalOptions="Center"
                                           VerticalTextAlignment="Center"
                                           FontSize="12" />
                                </StackLayout>
                                <Label Text="{i18n:Translate textblockSaveFullsizePhotosAllowedHint_Text}"
                                       IsVisible="{Binding SaveLocalAllowed}"
                                       PropertyChanged="Label_PropertyChanged"
                                       Margin="48,0,0,0"/>

                                <!-- button to delete local data manually -->
                                <controls:CustomButton x:Name="ButtonShowDeleteLocalData"
                                                       IsVisible="{Binding SaveLocalAllowed}"
                                                       PropertyChanged="Button_PropertyChanged"
                                                       Text="{i18n:Translate buttonDeleteLocalData_Content}"
                                                       Command="{Binding ShowDeleteLocalDataDialogCommand}" />

                                <!-- switch to enable sending coordinate data by default or not -->
                                <Label Text="{i18n:Translate toggleSendCoordinatesAllowed_Header}"
                                       Style="{StaticResource LabelHeader1}" />
                                <StackLayout Orientation="Horizontal">
                                    <controls:CustomSwitch x:Name="SwitchSendCoordinatesAllowed"
                                                           IsToggled="{Binding SendCoordinatesAllowed}" />
                                    <Label Text="{i18n:Translate TextSettingsDefaultOn}"
                                           PropertyChanged="Label_PropertyChanged"
                                           FontAttributes="Italic"
                                           VerticalOptions="Center"
                                           VerticalTextAlignment="Center"
                                           FontSize="12" />
                                </StackLayout>
                                <Label Text="{i18n:Translate textblockSendCoordinatesHint_Text}"
                                       PropertyChanged="Label_PropertyChanged"/>
                            </StackLayout>
                        </controls:CustomTabViewItem.TabContent>
                    </controls:CustomTabViewItem>

                <controls:CustomTabViewItem Header="{i18n:Translate pivotSettingsNotification_Header}">
                        <controls:CustomTabViewItem.TabContent>
                            <StackLayout Margin="0,0,0,24">
                                <!-- check to enable notifications -->
                                <Label Text="{i18n:Translate checkboxNotificationActivated_Content}"
                                       Style="{StaticResource LabelHeader1}" />
                                <StackLayout Orientation="Horizontal">
                                    <controls:CustomSwitch x:Name="SwitchNotificationActivated"
                                                           IsToggled="{Binding NotificationActivated}" />
                                    <Label Text="{i18n:Translate TextSettingsDefaultOn}"
                                           PropertyChanged="Label_PropertyChanged"
                                           FontAttributes="Italic"
                                           VerticalOptions="Center"
                                           VerticalTextAlignment="Center"
                                           FontSize="12" />
                                </StackLayout>

                                <Label PropertyChanged="Label_PropertyChanged">
                                    <Label.Text>
                                        <OnPlatform x:TypeArguments="x:String">
                                            <!-- TODO: implement different explaining text per platform -->
                                            <On Platform="iOS" Value="{i18n:Translate textblockNotificationActivatedHint_Text}" />
                                            <On Platform="Android" Value="{i18n:Translate textblockNotificationActivatedHint_Text}" />
                                            <On Platform="UWP" Value="{i18n:Translate textblockNotificationActivatedHint_Text}" />
                                            <On Platform="macOS" Value="{i18n:Translate textblockNotificationActivatedHint_Text}" />
                                        </OnPlatform>
                                    </Label.Text>
                                </Label>

                                <!-- don't show the following elements if notifications are disabled -->
                                <StackLayout IsVisible="{Binding NotificationActivated}">
                                    <!-- switch to enable notification for each news item -->
                                    <Label Text="{i18n:Translate switchNotificationEachNewsfeedAllowed_Header}"
                                           Style="{StaticResource LabelHeader1}"/>
                                    <StackLayout Orientation="Horizontal">
                                        <controls:CustomSwitch x:Name="SwitchNotificationEachNewsFeedAllowed"
                                                               IsToggled="{Binding NotificationEachNewsfeedAllowed}" />
                                        <Label Text="{i18n:Translate TextSettingsDefaultOn}"
                                               FontAttributes="Italic"
                                               VerticalOptions="Center"
                                               VerticalTextAlignment="Center"
                                               PropertyChanged="Label_PropertyChanged"
                                               FontSize="12" />
                                    </StackLayout>
                                    <Label Text="{i18n:Translate textblockNotificationEachNewsfeedAllowedHint_Text}"
                                           PropertyChanged="Label_PropertyChanged"/>
                                            
                                    <!-- switch to enable showing text of private messages in action center -->
                                    <Label Text="{i18n:Translate switchNotificationShowMessageContent_Header}"
                                           Style="{StaticResource LabelHeader1}" />
                                    <StackLayout Orientation="Horizontal">
                                        <controls:CustomSwitch x:Name="SwitchNotificationShowMessageContent"
                                                               IsToggled="{Binding NotificationShowMessageContent}" />
                                        <Label Text="{i18n:Translate TextSettingsDefaultOn}"
                                               FontAttributes="Italic"
                                               VerticalOptions="Center"
                                               VerticalTextAlignment="Center"
                                               PropertyChanged="Label_PropertyChanged"
                                               FontSize="12" />
                                    </StackLayout>
                                    <Label Text="{i18n:Translate textblockNotificationShowMessageContentHint_Text}"
                                           PropertyChanged="Label_PropertyChanged" />
                                            
                                    <!-- slider to set the refreshing time -->
                                    <Label Text="{i18n:Translate sliderNotificationFreshnessTime_Header}"
                                           Style="{StaticResource LabelHeader1}" />
                                    <Slider Maximum="120"
                                            Minimum="15"
                                            HorizontalOptions="Start"
                                            WidthRequest="300"
                                            Value="{Binding NotificationFreshnessTime}" />
                                    <Label Text="{Binding NotificationFreshnessTimeHint}"
                                           PropertyChanged="Label_PropertyChanged"/>
                                    <!-- TODO: add elements for setting specific times for notifications -->
                                </StackLayout>
                            </StackLayout>
                        </controls:CustomTabViewItem.TabContent>
                </controls:CustomTabViewItem>
              </controls:CustomTabView.TabViewItems>
            </controls:CustomTabView>   

            <!-- dialog to ask user which local data should be deleted -->
            <Grid x:Name="GridDeleteLocalData"
                  BackgroundColor="#1AD3D3D3"
                  IsVisible="{Binding IsDeleteLocalDataDialogVisible}">
                <Frame x:Name="GridFlyout" 
                       WidthRequest="300"
                       BackgroundColor="{DynamicResource NavigationBackgroundColor}"
                       OutlineColor="{DynamicResource AccentColor}"
                       HorizontalOptions="Center"
                       VerticalOptions="CenterAndExpand">
                    <StackLayout>
                        <Label Style="{StaticResource LabelHeaderFlyoutTitle}"
                               Text="{i18n:Translate contentDialogDeleteLocalData_Title}" />
                        <Label Text="{i18n:Translate textblockDeleteLocalData}" />
                        <StackLayout Orientation="Horizontal">
                            <controls:CustomSwitch x:Name="SwitchDeleteLocalDatabase"
                                                   IsToggled="{Binding DeleteLocalDatabaseChecked}" />
                            <Label Text="{i18n:Translate checkBoxDeleteLocalDatabase_Content}"
                                   VerticalTextAlignment="Center"/>
                        </StackLayout>
                        <StackLayout Orientation="Horizontal">
                            <controls:CustomSwitch x:Name="SwitchDeleteFullsizePhotos"
                                                   IsToggled="{Binding DeleteFullsizePhotosChecked}" />
                            <Label Text="{i18n:Translate checkBoxDeleteFullsizePhotos_Content}"
                                   VerticalTextAlignment="Center"/>
                        </StackLayout>
                        <StackLayout Orientation="Horizontal">
                            <controls:CustomSwitch x:Name="SwitchDeleteSmallMediumsizePhotos"
                                                   IsToggled="{Binding DeleteSmallMediumsizePhotosChecked}" />
                            <Label Text="{i18n:Translate checkBoxDeleteSmallMediumsizePhotos_Content}"
                                   VerticalTextAlignment="Center"/>
                        </StackLayout>
                        <Grid>
                            <controls:CustomButton Grid.Column="0" 
                                                   x:Name="ButtonDeleteLocalData"
                                                   Text="{i18n:Translate contentDialogDeleteLocalData_PrimaryButtonText}"
                                                   Command="{Binding DeleteLocalDataCommand}"/>
                            <controls:CustomButton Grid.Column="1" 
                                                   x:Name="ButtonCancelDeleteLocalData"
                                                   Text="{i18n:Translate contentDialogDeleteLocalData_SecondaryButtonText}"
                                                   Command="{Binding CancelDeleteLocalDataCommand}" />
                        </Grid>
                    </StackLayout>           
                </Frame>
            </Grid>
        </Grid>
    </styles:BaseContentPage.PageContent>
</styles:BaseContentPage>
