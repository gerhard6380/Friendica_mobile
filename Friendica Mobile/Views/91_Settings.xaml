<Page
    x:Class="Friendica_Mobile.Views.Settings"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Friendica_Mobile"
    xmlns:views="using:Friendica_Mobile.Views"
    xmlns:mvvm="using:Friendica_Mobile.Mvvm"
    xmlns:triggers="using:Friendica_Mobile.Triggers"
    xmlns:conv="using:Friendica_Mobile.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    x:Name="pageSettings" x:Uid="pageSettings">

    <Page.DataContext>
        <mvvm:SettingsViewmodel x:Name="pageMvvm" />
    </Page.DataContext>

    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Styles/MainStyles.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <Style TargetType="TextBlock" BasedOn="{StaticResource GenericTextBlockStyle}" />
            <Style TargetType="Grid" BasedOn="{StaticResource GenericGridStyle}" />
            <Style TargetType="ScrollViewer" BasedOn="{StaticResource GenericScrollViewerStyle}" />
            <conv:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
            <conv:FlowDirectionStringToBoolConverter x:Name="FlowDirectionStringToBoolConverter" />
            <conv:MobileDeviceOnlyConverter x:Name="MobileDeviceOnlyConverter" />
            <conv:StartPageToIntConverter x:Name="StartPageToIntConverter" />
            <conv:BoolStringToBoolConverter x:Name="BoolStringToBoolConverter" />
            <conv:NetworkModeToIntConverter x:Name="NetworkModeToIntConverter" />
        </ResourceDictionary>
    </Page.Resources>

    <Grid>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="WindowStates">
                <VisualState x:Name="MobilePortrait">
                    <VisualState.StateTriggers>
                        <triggers:OrientationDeviceFamilyTrigger OrientationDevice="MobilePortrait" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="textBlockApplicationName.Visibility" Value="Visible" />
                        <Setter Target="textBlockPageName.Visibility" Value="Visible" />
                        <Setter Target="pageSettings.Margin" Value="0,0,0,0" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="MobileLandscape">
                    <VisualState.StateTriggers>
                        <triggers:OrientationDeviceFamilyTrigger OrientationDevice="MobileLandscape" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="textBlockApplicationName.Visibility" Value="Collapsed" />
                        <Setter Target="textBlockPageName.Visibility" Value="Visible" />
                        <Setter Target="textBlockPageName.FontSize" Value="{StaticResource ApplicationNameFontSize}" />
                        <Setter Target="pageSettings.Margin" Value="0,0,48,0" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Desktop">
                    <VisualState.StateTriggers>
                        <triggers:OrientationDeviceFamilyTrigger OrientationDevice="DesktopLandscape" />
                        <triggers:OrientationDeviceFamilyTrigger OrientationDevice="DesktopPortrait" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="textBlockApplicationName.Visibility" Value="Collapsed" />
                        <Setter Target="textBlockPageName.Visibility" Value="Visible" />
                        <Setter Target="textBlockPageName.FontSize" Value="{StaticResource PageNameFontSize}" />
                        <Setter Target="pageSettings.Margin" Value="0,0,0,0" />
                        <Setter Target="textboxFriendicaServer.HorizontalAlignment" Value="Left" />
                        <Setter Target="textboxFriendicaServer.MinWidth" Value="300" />
                        <Setter Target="textboxFriendicaUsername.HorizontalAlignment" Value="Left" />
                        <Setter Target="textboxFriendicaUsername.MinWidth" Value="300" />
                        <Setter Target="textboxFriendicaPassword.HorizontalAlignment" Value="Left" />
                        <Setter Target="textboxFriendicaPassword.MinWidth" Value="300" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <ScrollViewer>
            <StackPanel>
                <RelativePanel>
                    <TextBlock x:Name="textBlockApplicationName" x:Uid="textBlockApplicationName" 
                               Visibility="Visible" 
                               Style="{StaticResource ApplicationNameTextBlockStyle}"/>
                    <TextBlock x:Name="textBlockPageName" x:Uid="pageTitleSettings" 
                               Visibility="Visible"
                               Style="{StaticResource PageNameTextBlockStyle}" 
                               RelativePanel.Below="textBlockApplicationName"/>
                </RelativePanel>

                <Pivot x:Uid="pivotSettings">
                    <PivotItem x:Uid="pivotSettingsGeneral">
                        <StackPanel>
                           
                            <TextBox x:Name="textboxFriendicaServer" x:Uid="textboxFriendicaServer"
                         HeaderTemplate="{StaticResource SettingsHeaderTemplate}"
                         InputScope="Url"
                         HorizontalAlignment="Stretch"
                         Text="{Binding FriendicaServer, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         MaxWidth="500"
                         KeyUp="textboxFriendicaServer_KeyUp"/>
                            
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="24" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <FontIcon Grid.Column="0"
                                          Visibility="{Binding FriendicaServerWarningSign, 
                                    Converter={StaticResource BoolToVisibilityConverter}}"
                                          Glyph="&#xE814;" 
                                          FontFamily="Segoe MDL2 Assets" 
                                          FontSize="16" 
                                          Foreground="{Binding FriendicaServerWarningColor}"/>
                                <TextBlock Grid.Column="1"
                                           Foreground="{Binding FriendicaServerWarningColor}"
                                           Text="{Binding FriendicaServerHint}" />
                            </Grid>
                            
                            <TextBox x:Name="textboxFriendicaUsername" x:Uid="textboxFriendicaUsername"
                         HeaderTemplate="{StaticResource SettingsHeaderTemplate}"
                         InputScope="EmailNameOrAddress"
                         HorizontalAlignment="Stretch"
                         Text="{Binding FriendicaUsername, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         MaxWidth="500"
                         KeyUp="textboxFriendicaUsername_KeyUp"/>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="24" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <FontIcon Grid.Column="0"
                              Visibility="{Binding FriendicaUsernameWarningSign, 
                        Converter={StaticResource BoolToVisibilityConverter}}"
                              Glyph="&#xE814;" 
                              FontFamily="Segoe MDL2 Assets" 
                              FontSize="16" 
                              Foreground="{Binding FriendicaUsernameWarningColor}"/>
                                <TextBlock Grid.Column="1"
                               Foreground="{Binding FriendicaUsernameWarningColor}"
                               Text="{Binding FriendicaUsernameHint}" />
                            </Grid>

                            <PasswordBox x:Name="textboxFriendicaPassword" x:Uid="textboxFriendicaPassword"
                             HeaderTemplate="{StaticResource SettingsHeaderTemplate}"
                             HorizontalAlignment="Stretch"
                             MaxWidth="500"
                             Password="{Binding FriendicaPassword, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                             PasswordRevealMode="Peek"
                             KeyUp="textboxFriendicaPassword_KeyUp" />
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="24" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <FontIcon Grid.Column="0"
                              Visibility="{Binding FriendicaPasswordWarningSign, 
                        Converter={StaticResource BoolToVisibilityConverter}}"
                              Glyph="&#xE814;" 
                              FontFamily="Segoe MDL2 Assets" 
                              FontSize="16" 
                              Foreground="{Binding FriendicaPasswordWarningColor}"/>
                                <TextBlock Grid.Column="1"
                               Foreground="{Binding FriendicaPasswordWarningColor}"
                               Text="{Binding FriendicaPasswordHint}" />
                            </Grid>

                            <TextBlock x:Name="TestConnectionResult"
                                       FontStyle="Italic"
                                       FontWeight="Bold"
                                       Foreground="{Binding TestConnectionResultColor}"
                                       Visibility="{Binding TestConnectionResultVisible, Converter={StaticResource BoolToVisibilityConverter}}"
                               Text="{Binding TestConnectionResult}" />

                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Button x:Name="buttonTestConnection" x:Uid="buttonTestConnection"
                                Grid.Column="0" 
                                Margin="0,12,0,0"
                                Command="{Binding SaveCommand}" />
                                <Grid Grid.Column="1"
                              HorizontalAlignment="Left"
                              VerticalAlignment="Center"
                              Visibility="{Binding TestConnectionInProgress, 
                            Converter={StaticResource BoolToVisibilityConverter}}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <ProgressRing x:Name="progressTestConnection" x:Uid="progressTestConnection"
                                          Grid.Column="0"
                                          IsActive="true"
                                          IsEnabled="True"
                                          HorizontalAlignment="Left"
                                          VerticalAlignment="Center"/>
                                    <TextBlock x:Name="textblockConnectionTestInProgress" x:Uid="textblockConnectionTestInProgress"
                                       Grid.Column="1"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Center" />
                                </Grid>
                            </Grid>

                            <ToggleSwitch x:Name="sliderNavigationSide" x:Uid="sliderNavigationSide" 
                                      HeaderTemplate="{StaticResource SettingsHeaderTemplate}"
                                      Visibility="{Binding DeviceFamily, Converter={StaticResource MobileDeviceOnlyConverter}, Mode=OneWay}"
                                      IsOn="{Binding NavigationSide, Converter={StaticResource FlowDirectionStringToBoolConverter}, Mode=TwoWay}" />

                            <ComboBox x:Name="comboboxStartPage" x:Uid="comboboxStartPage"
                                  HeaderTemplate="{StaticResource SettingsHeaderTemplate}"
                                  SelectedIndex="{Binding StartPage, Converter={StaticResource StartPageToIntConverter}, Mode=TwoWay}">
                                <ComboBoxItem>
                                    <StackPanel Orientation="Horizontal">
                                        <FontIcon Glyph="&#xEC25;" FontFamily="Segoe MDL2 Assets" FontSize="16"/>
                                        <TextBlock x:Uid="pageTitleHome" />
                                    </StackPanel>
                                </ComboBoxItem>
                                <ComboBoxItem>
                                    <StackPanel Orientation="Horizontal">
                                        <FontIcon Glyph="&#xe12A;" FontFamily="Segoe MDL2 Assets" FontSize="16"/>
                                        <TextBlock x:Uid="pageTitleNetwork" />
                                    </StackPanel>
                                </ComboBoxItem>
                                <ComboBoxItem>
                                    <StackPanel Orientation="Horizontal">
                                        <FontIcon Glyph="&#xEC05;" FontFamily="Segoe MDL2 Assets" FontSize="16"/>
                                        <TextBlock x:Uid="pageTitleNewsfeed" />
                                    </StackPanel>
                                </ComboBoxItem>
                            </ComboBox>

                                <ComboBox x:Name="comboboxNetworkMode" x:Uid="comboboxNetworkMode"
                                      HeaderTemplate="{StaticResource SettingsHeaderTemplate}"
                                      SelectedIndex="{Binding NetworkMode, Converter={StaticResource NetworkModeToIntConverter}, Mode=TwoWay}"
                                      Visibility="{Binding IsVisibleNetworkMode, Converter={StaticResource BoolToVisibilityConverter}}">
                                    <ComboBoxItem>
                                        <StackPanel Orientation="Horizontal">
                                            <FontIcon Glyph="&#xE2AD;" FontFamily="Segoe MDL2 Assets" FontSize="16"/>
                                            <TextBlock x:Uid="textblockNetworkChronological" />
                                        </StackPanel>
                                    </ComboBoxItem>
                                    <ComboBoxItem>
                                        <StackPanel Orientation="Horizontal">
                                            <FontIcon Glyph="&#xE8BD;" FontFamily="Segoe MDL2 Assets" FontSize="16"/>
                                            <TextBlock x:Uid="textblockNetworkThreads" />
                                        </StackPanel>
                                    </ComboBoxItem>
                                </ComboBox>

                            <!-- set standard ACL rights -->
                            <TextBlock x:Name="textblockAccessRightsHeader" x:Uid="textblockAccessRightsHeader"
                                       Style="{StaticResource AboutHeaderTextBlockStyle}" />

                            <RadioButton x:Name="radiobuttonPublicPost" x:Uid="radiobuttonPublicPost"
                                         GroupName="radioGroupACL" 
                                         IsChecked="{Binding RadioButtonPublicPostChecked, Mode=TwoWay}"
                                         Style="{StaticResource RadioButtonStyleNormal}" />
                            <RadioButton x:Name="radiobuttonPrivatePost" x:Uid="radiobuttonPrivatePost" 
                                         GroupName="radioGroupACL"
                                         IsChecked="{Binding RadioButtonPrivatePostChecked, Mode=TwoWay}"
                                         Style="{StaticResource RadioButtonStyleNormal}" />

                            <ListBox x:Name="listBoxPrivateSelectedContacts" 
                                     ItemsSource="{Binding Contacts}"
                                     SelectionMode="Multiple"
                                     Margin="48,4,0,4"
                                     MaxHeight="150"
                                     IsEnabled="{Binding RadioButtonPrivatePostChecked}"
                                     ItemTemplate="{StaticResource FriendicaUserTemplateACL}"
                                     local:clsListBoxExtensionsContacts.SelectedItemList="{Binding SelectedContacts, Mode=TwoWay}"
                                     SelectionChanged="listBoxPrivateSelectedContacts_SelectionChanged"/>

                            <ListBox x:Name="listBoxPrivateSelectedGroups"
                                     ItemsSource="{Binding Groups}"
                                     SelectionMode="Multiple"
                                     Margin="48,4,0,4"
                                     MaxHeight="150"
                                     IsEnabled="{Binding RadioButtonPrivatePostChecked}"
                                     ItemTemplate="{StaticResource FriendicaGroupTemplateACL}" 
                                     local:clsListBoxExtensionsGroups.SelectedItemList="{Binding SelectedGroups, Mode=TwoWay}"
                                     SelectionChanged="listBoxPrivateSelectedGroups_SelectionChanged"/>

                            <!-- empty grid to get a space to the bottom of the page -->
                            <Grid Height="48" />

                        </StackPanel>
                    </PivotItem>
                    <PivotItem x:Uid="pivotSettingsPrivacy">
                        <StackPanel>
                            <!-- Button for buying the in-app product "RemoveAdvertising" to avoid banners -->
                            <TextBlock x:Name="textBlockSettingsRemoveAdvertisingHeader" x:Uid="textBlockSettingsRemoveAdvertisingHeader"
                                       Style="{StaticResource AboutHeaderTextBlockStyle}" />
                            <Button x:Name="buttonSettingRemoveAdvertising" x:Uid="buttonSettingsRemoveAdvertising"
                                    Command="{Binding RemoveAdCommand}" />
                            
                            <!-- get allowance of user to save local content -->
                            <ToggleSwitch x:Name="sliderSaveLocalAllowed" x:Uid="sliderSaveLocalAllowed" 
                                          HeaderTemplate="{StaticResource SettingsHeaderTemplate}"
                                          Visibility="Visible"
                                          IsOn="{Binding SaveLocalAllowed, Converter={StaticResource BoolStringToBoolConverter}, Mode=TwoWay}"
                                          Toggled="sliderSaveLocalAllowed_Toggled" />
                            <TextBlock x:Name="textblockSaveLocalAllowedHint" x:Uid="textblockSaveLocalAllowedHint"
                                       TextWrapping="Wrap" />
                            <TextBlock x:Name="textblockSettingsSaveLocalAllowedHint2" x:Uid="textblockSettingsSaveLocalAllowedHint2"
                                       TextWrapping="Wrap" />
                            <ToggleSwitch x:Name="sliderSaveFullsizePhotosAllowed"
                                          Margin="24,0,0,0"
                                          Visibility="{Binding IsOn, ElementName=sliderSaveLocalAllowed, Converter={StaticResource BoolToVisibilityConverter}}"
                                          IsOn="{Binding SaveFullsizePhotosAllowed, Mode=TwoWay}"
                                          Toggled="sliderSaveFullsizePhotosAllowed_Toggled"/>
                            <TextBlock x:Name="textblockSaveFullsizePhotosAllowedHint" x:Uid="textblockSaveFullsizePhotosAllowedHint"
                                       TextWrapping="Wrap"
                                       Visibility="{Binding IsOn, ElementName=sliderSaveLocalAllowed, Converter={StaticResource BoolToVisibilityConverter}}"
                                       Margin="24,0,0,0" />
                            <Button x:Name="buttonDeleteLocalData" x:Uid="buttonDeleteLocalData"
                                Margin="0,12,0,0"
                                    Click="buttonDeleteLocalDatabase_Click"/>


                            <!-- checkbox for sending GPS coordinates on each post -->
                            <ToggleSwitch x:Name="toogleSendCoordinatesAllowed" x:Uid="toggleSendCoordinatesAllowed" 
                                          HeaderTemplate="{StaticResource SettingsHeaderTemplate}"
                                          Visibility="Visible"
                                          IsOn="{Binding SendCoordinatesAllowed, Converter={StaticResource BoolStringToBoolConverter}, Mode=TwoWay}" />
                            <TextBlock x:Name="textblockSendCoordinatesHint" x:Uid="textblockSendCoordinatesHint"
                                       TextWrapping="Wrap" />
                            
                            <!-- content dialog for asking which data should be deleted -->
                            <ContentDialog x:Name="contentDialogDeleteLocalData" x:Uid="contentDialogDeleteLocalData"
                                           PrimaryButtonCommand="{Binding DeleteLocalDataCommand}"
                                           SecondaryButtonCommand="{Binding CancelDeleteLocalDataCommand}">
                                <StackPanel>
                                    <TextBlock x:Name="textblockDeleteLocalData" x:Uid="textblockDeleteLocalData"
                                               TextWrapping="Wrap" />
                                    <CheckBox x:Name="checkBoxDeleteLocalDatabase" x:Uid="checkBoxDeleteLocalDatabase"
                                              Checked="checkBoxDeleteContentDialog_Checked" 
                                              Unchecked="checkBoxDeleteContentDialog_Checked"
                                              IsChecked="{Binding DeleteLocalDatabaseChecked, Mode=TwoWay}" />
                                    <CheckBox x:Name="checkBoxDeleteFullsizePhotos" x:Uid="checkBoxDeleteFullsizePhotos"
                                              Checked="checkBoxDeleteContentDialog_Checked"
                                              Unchecked="checkBoxDeleteContentDialog_Checked"
                                              IsChecked="{Binding DeleteFullsizePhotosChecked, Mode=TwoWay}" />
                                    <CheckBox x:Name="checkBoxDeleteSmallMediumsizePhotos" x:Uid="checkBoxDeleteSmallMediumsizePhotos"
                                              Checked="checkBoxDeleteContentDialog_Checked"
                                              Unchecked="checkBoxDeleteContentDialog_Checked"
                                              IsChecked="{Binding DeleteSmallMediumsizePhotosChecked, Mode=TwoWay}" />
                                </StackPanel>
                            </ContentDialog>
                        </StackPanel>
                    </PivotItem>
                    <PivotItem x:Uid="pivotSettingsNotification">
                        <StackPanel>
                            <CheckBox x:Name="checkboxNotificationActivated" x:Uid="checkboxNotificationActivated" 
                                      IsChecked="{Binding NotificationActivated, Mode=TwoWay}"/>
                            <TextBlock x:Name="textblockNotificationActivatedHint" x:Uid="textblockNotificationActivatedHint"
                                       TextWrapping="Wrap" />

                            <!-- get allowance of user to show a notification for each newsfeed item -->
                            <ToggleSwitch x:Name="switchNotificationEachNewsfeedAllowed" x:Uid="switchNotificationEachNewsfeedAllowed"
                                          HeaderTemplate="{StaticResource SettingsHeaderTemplate}"
                                          Visibility="Visible"
                                          IsOn="{Binding NotificationEachNewsfeedAllowed, Mode=TwoWay}" />
                            <TextBlock x:Name="textblockNotificationEachNewsfeedAllowedHint" x:Uid="textblockNotificationEachNewsfeedAllowedHint"
                                       TextWrapping="Wrap" />
                            
                            <!-- get allowance of user to show content of private messages in notification -->
                            <ToggleSwitch x:Name="switchNotificationShowMessgeContent" x:Uid="switchNotificationShowMessageContent" 
                                          HeaderTemplate="{StaticResource SettingsHeaderTemplate}"
                                          Visibility="Visible"
                                          IsOn="{Binding NotificationShowMessageContent, Mode=TwoWay}" />
                            <TextBlock x:Name="textblockNotificationShowMessageContentHint" x:Uid="textblockNotificationShowMessageContentHint"
                                       TextWrapping="Wrap" />

                            <!-- slider for the user to set the rate of checking new items in background -->
                            <Slider x:Name="sliderNotificationFreshnessTime" x:Uid="sliderNotificationFreshnessTime"
                                    HeaderTemplate="{StaticResource SettingsHeaderTemplate}"
                                    Visibility="{Binding NotificationActivated, Converter={StaticResource BoolToVisibilityConverter}}" 
                                    Value="{Binding NotificationFreshnessTime, Mode=TwoWay}" 
                                    Minimum="15"
                                    Maximum="120"
                                    StepFrequency="5"
                                    TickFrequency="5"
                                    SnapsTo="Ticks"/>
                            <TextBlock x:Name="textblockNotificationFreshnessTimeHint" 
                                       Text="{Binding NotificationFreshnessTimeHint}"
                                       TextWrapping="Wrap"
                                       Visibility="{Binding NotificationActivated, Converter={StaticResource BoolToVisibilityConverter}}" />

                        </StackPanel>
                    </PivotItem>
                </Pivot>
            </StackPanel>
        </ScrollViewer>

        <!-- red box indicating that app delete local data from device (big photo collection could take some time) -->
        <RelativePanel Background="Red"
                       VerticalAlignment="Top"
                       HorizontalAlignment="Stretch"
                       Margin="4,0,4,0"
                       Visibility="{Binding IsDeletingLocalData, Converter={StaticResource BoolToVisibilityConverter}}">
            <ProgressRing x:Name="progressDeletingLocalData"
                          IsActive="True"
                          Foreground="White"
                          Margin="36,0,36,4"
                          RelativePanel.AlignVerticalCenterWithPanel="True"
                          RelativePanel.AlignLeftWithPanel="True"/>
            <TextBlock x:Name="textblockSettingsDeleteLocalData" x:Uid="textblockSettingsDeleteLocalData"
                       Foreground="White"
                       TextWrapping="Wrap"
                       RelativePanel.RightOf="progressDeletingLocalData" 
                       RelativePanel.AlignVerticalCenterWithPanel="True" />
        </RelativePanel>

    </Grid>
</Page>
    
        