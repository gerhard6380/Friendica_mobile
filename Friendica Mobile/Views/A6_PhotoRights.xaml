<Page
    x:Class="Friendica_Mobile.Views.A6_PhotoRights"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Friendica_Mobile"
    xmlns:views="using:Friendica_Mobile.Views"
    xmlns:mvvm="using:Friendica_Mobile.Mvvm"
    xmlns:triggers="using:Friendica_Mobile.Triggers"
    xmlns:conv="using:Friendica_Mobile.Converters"
    xmlns:styles="using:Friendica_Mobile.Styles"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    x:Name="pagePhotoRights" x:Uid="pagePhotoRights">

    <Page.DataContext>
        <mvvm:PhotoRightsViewmodel x:Name="pageMvvm" />
    </Page.DataContext>

    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Styles/PhotosStyles.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <CollectionViewSource x:Name="cvsContacts" Source="{Binding SourceContacts}" IsSourceGrouped="True" />
        </ResourceDictionary>
    </Page.Resources>

    <Grid>
        
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="WindowStates">
                <VisualState x:Name="MobilePortrait">
                    <VisualState.StateTriggers>
                        <triggers:OrientationDeviceFamilyTrigger OrientationDevice="MobilePortrait" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="textBlockApplicationName.Visibility" Value="Visible" />
                        <Setter Target="textBlockPageName.Visibility" Value="Visible" />
                        <Setter Target="pagePhotoRights.Margin" Value="0,0,0,0" />
                        <Setter Target="gridPhotoInformationBlock.(Grid.ColumnSpan)" Value="2" />
                        <Setter Target="gridAccessRightBlock.(Grid.Row)" Value="2" />
                        <Setter Target="gridAccessRightBlock.(Grid.Column)" Value="0" />
                        <Setter Target="gridAccessRightBlock.(Grid.ColumnSpan)" Value="2" />
                        <Setter Target="gridAccessRightBlock.(Grid.RowSpan)" Value="1" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="MobileLandscape">
                    <VisualState.StateTriggers>
                        <triggers:OrientationDeviceFamilyTrigger OrientationDevice="MobileLandscape" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="textBlockApplicationName.Visibility" Value="Collapsed" />
                        <Setter Target="textBlockPageName.Visibility" Value="Visible" />
                        <Setter Target="textBlockPageName.FontSize" Value="{StaticResource ApplicationNameFontSize}" />
                        <Setter Target="pagePhotoRights.Margin" Value="0,0,92,0" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="DesktopLandscape">
                    <VisualState.StateTriggers>
                        <triggers:OrientationDeviceFamilyTrigger OrientationDevice="DesktopLandscape" />
                        <triggers:OrientationDeviceFamilyTrigger OrientationDevice="MobileContinuum" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="textBlockApplicationName.Visibility" Value="Collapsed" />
                        <Setter Target="textBlockPageName.Visibility" Value="Visible" />
                        <Setter Target="textBlockPageName.FontSize" Value="{StaticResource PageNameFontSize}" />
                        <Setter Target="pagePhotoRights.Margin" Value="0,0,0,0" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="DesktopPortrait">
                    <VisualState.StateTriggers>
                        <triggers:OrientationDeviceFamilyTrigger OrientationDevice="DesktopPortrait" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="textBlockApplicationName.Visibility" Value="Collapsed" />
                        <Setter Target="textBlockPageName.Visibility" Value="Visible" />
                        <Setter Target="textBlockPageName.FontSize" Value="{StaticResource PageNameFontSize}" />
                        <Setter Target="pagePhotoRights.Margin" Value="0,0,0,0" />
                        <Setter Target="gridPhotoInformationBlock.(Grid.ColumnSpan)" Value="2" />
                        <Setter Target="gridAccessRightBlock.(Grid.Row)" Value="2" />
                        <Setter Target="gridAccessRightBlock.(Grid.Column)" Value="0" />
                        <Setter Target="gridAccessRightBlock.(Grid.ColumnSpan)" Value="2" />
                        <Setter Target="gridAccessRightBlock.(Grid.RowSpan)" Value="1" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <Grid>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*" />
                    <ColumnDefinition Width="2*" />
                </Grid.ColumnDefinitions>

                <!-- place header in first row -->
                <RelativePanel x:Name="relativePanelPageHeader"
                               Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2">
                    <TextBlock x:Name="textBlockApplicationName" x:Uid="textBlockApplicationName" 
                       Visibility="Visible" 
                       Style="{StaticResource ApplicationNameTextBlockStyle}"/>
                    <TextBlock x:Name="textBlockPageName" x:Uid="pageTitlePhotoRights"  
                       Visibility="Visible" 
                       Style="{StaticResource PageNameTextBlockStyle}" 
                       RelativePanel.Below="textBlockApplicationName"/>
                </RelativePanel>

                <!-- first section with photo, identifier for "commented/liked", hint on changes -->
                <Grid x:Name="gridPhotoInformationBlock" 
                      Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="1">
                    <StackPanel>
                        <!-- show photo as orientation for user -->
                        <Grid x:Name="gridImageInRights"
                              Visibility="{Binding IsPhotoDisplayed, Converter={StaticResource BoolToVisibilityConverter}}"
                              Margin="0,0,0,12">
                            <StackPanel HorizontalAlignment="Center"
                                        VerticalAlignment="Center">
                                <Border Background="AntiqueWhite"
                                        BorderThickness="2"
                                        Margin="4"
                                        Grid.Row="1" Grid.Column="1">
                                    <Grid>
                                        <StackPanel Margin="12">
                                            <Grid>
                                                <Image x:Name="imageInPhotoRights"
                                                       Stretch="Uniform"
                                                       MaxHeight="144"
                                                       Height="{Binding ActualHeight, ElementName=gridImageInFlipView}"
                                                       Source="{Binding Photo.ThumbSizeData, UpdateSourceTrigger=PropertyChanged}" />
                                            </Grid>
                                            <!-- showing photo description -->
                                            <Grid x:Name="gridPhotoDescriptionShow"
                                                  Visibility="{Binding PhotoEditingEnabled, Converter={StaticResource BoolToVisibilityCollapsedConverter}}">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*" />
                                                    <ColumnDefinition Width="Auto" />
                                                </Grid.ColumnDefinitions>
                                                <TextBlock x:Name="textblockPhotoDescription" 
                                                           Grid.Column="0" 
                                                           MaxHeight="48"
                                                           Margin="0,12,0,0"
                                                           FontFamily="Segoe Script"
                                                           Foreground="SaddleBrown"
                                                           TextTrimming="WordEllipsis"
                                                           TextWrapping="Wrap"
                                                           Text="{Binding Photo.Photo.PhotoDesc}"/>
                                            </Grid>
                                        </StackPanel>
                                    </Grid>
                                </Border>
                            </StackPanel>
                        </Grid>

                        <Grid Margin="4,0,0,0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <!-- box is checked if photo is alredy commented or liked -> indicates problems if changing rights -->
                            <CheckBox x:Name="checkboxPhotoIsCommentedLiked" x:Uid="checkboxPhotoIsCommentedLiked"
                                      Grid.Row="0" Grid.Column="0"
                                  IsEnabled="False"
                                  IsChecked="{Binding IsCommentedLiked}"/>

                            <!-- box is checked if there is already a mismatch between rights on photo and rights on posts/likes-->
                            <CheckBox x:Name="checkboxPhotoACLMismatch" x:Uid="checkboxPhotoACLMismatch"
                                      Grid.Row="1" Grid.Column="0"
                                  IsEnabled="False"
                                  IsChecked="{Binding Photo.Photo.PhotoRightsMismatch}" />
                            
                            <!-- button and flyout with more information on access rights -->
                            <Button x:Name="buttonPhotoRightsInformation"
                                    Grid.Row="0" Grid.Column="1" Grid.RowSpan="2"
                                    Background="Transparent"
                                    Width="36" Height="36" Margin="8">
                                <Grid x:Name="gridEllipseHelpSign"
                                      Margin="-12">
                                    <Ellipse x:Name="ellipseHelpSign" 
                                             Fill="{StaticResource AccentBrush}"
                                             Width="24" Height="24"
                                             HorizontalAlignment="Stretch"/>
                                    <FontIcon Glyph="&#xE897;" FontSize="16" FontWeight="ExtraBold"
                                              FontFamily="Segoe MDL2 Assets" />
                                </Grid>
                                <Button.Flyout>
                                    <Flyout>
                                        <StackPanel MaxWidth="300">
                                            <TextBlock x:Name="textblockPhotoRightsHelp1" x:Uid="textblockPhotoRightsHelp1"
                                                       TextWrapping="Wrap"
                                                       Margin="24,24,24,0" />
                                            <TextBlock x:Name="textblockPhotoRightsHelp2" x:Uid="textblockPhotoRightsHelp2"
                                                       TextWrapping="Wrap"
                                                       Margin="24,24,24,0" />
                                        </StackPanel>
                                    </Flyout>
                                </Button.Flyout>
                            </Button>

                        </Grid>
                        
                        <!-- show a hint if user has changed rights explaining the issues with commenting/liking -->
                        <Grid x:Name="gridHintOnChanging" 
                              Background="Red"
                              Visibility="{Binding IsShowingHintOnChanging, Converter={StaticResource BoolToVisibilityConverter}}"
                              Margin="4">
                            <StackPanel>
                                <HyperlinkButton x:Name="hyperlinkButtonHintOnChangingSmall"
                                                 Visibility="{Binding IsHintVisibleFull, Converter={StaticResource BoolToVisibilityCollapsedConverter}}"
                                                 Tapped="hyperlinkButton_Tapped">
                                    <FlyoutBase.AttachedFlyout>
                                        <Flyout Placement="Top">
                                            <Flyout.FlyoutPresenterStyle>
                                                <Style TargetType="FlyoutPresenter">
                                                    <Setter Property="Background" Value="Red" />
                                                </Style>
                                            </Flyout.FlyoutPresenterStyle>
                                            <TextBlock x:Name="textblockHintOnChangingFlyout"
                                                       Text="{Binding HintOnChanging}"
                                                       TextWrapping="Wrap"
                                                       Foreground="White"
                                                       MaxWidth="300"
                                                       Margin="4,4,16,4"/>
                                        </Flyout>
                                    </FlyoutBase.AttachedFlyout>
                                    <TextBlock x:Name="textblockHintOnChangingSmall"
                                               Text="{Binding HintOnChanging}"
                                               TextTrimming="CharacterEllipsis"
                                               Foreground="White"
                                               Margin="4,4,16,4"/>
                                </HyperlinkButton>
                                <TextBlock x:Name="textblockHintOnChanging"
                                       Text="{Binding HintOnChanging}"
                                           Visibility="{Binding IsHintVisibleFull, Converter={StaticResource BoolToVisibilityConverter}}"
                                       TextWrapping="Wrap"
                                       Foreground="White"
                                       Margin="4,4,16,4"/>
                                <CheckBox x:Name="checkboxPhotoUploadNew" x:Uid="checkboxPhotoUploadNew"
                                          IsEnabled="True"
                                          Foreground="Blue"
                                          Margin="4,4,16,4"
                                          IsChecked="{Binding UpdateAsNewUpload, Mode=TwoWay}" Style="{StaticResource CheckBoxPhotoWhiteStyle}" />
                            </StackPanel>
                            <!-- enables ease undo of changes -->
                            <Button x:Name="buttonUndoChanges"
                                    VerticalAlignment="Bottom"
                                    HorizontalAlignment="Right"
                                    Padding="0"
                                    Background="Transparent"
                                    Margin="0,4,4,4"
                                    Command="{Binding UndoChangesCommand}">
                                <Grid>
                                    <Ellipse Fill="White"/>
                                    <FontIcon Glyph="&#xE7A7;" FontFamily="Segoe MDL2 Assets" 
                                              Foreground="Red" FontSize="12" 
                                              Margin="8"/>
                                </Grid>
                            </Button>
                        </Grid>
                    </StackPanel>
                </Grid>

                <!-- second section with radio for public/private, listbox for groups and listbox for users incl. hint to user -->
                <Grid x:Name="gridAccessRightBlock" 
                            Grid.Row="1" Grid.Column="1" 
                      Grid.RowSpan="2" Grid.ColumnSpan="1">
                    <ScrollViewer>
                        <StackPanel Margin="4,12,4,4">
                            <!-- user can switch between public or private rights, if private groups appear (contacts only when clicking on header) -->
                            <RadioButton x:Name="radiobuttonPhotoRightsPublic" x:Uid="radiobuttonPhotoRightsPublic"
                                         GroupName="radioGroupAccessType" 
                                         IsChecked="{Binding IsPublicPhoto, Mode=TwoWay}"
                                         Style="{StaticResource RadioButtonStyleNormal}" />
                            <RadioButton x:Name="radiobuttonPhotoRightsPrivate" x:Uid="radiobuttonPhotoRightsPrivate" 
                                         GroupName="radioGroupAccessType"
                                         IsChecked="{Binding IsPrivatePhoto, Mode=TwoWay}"
                                         Style="{StaticResource RadioButtonStyleNormal}" />

                            <TextBlock x:Name="textblockPhotoACLGroups" x:Uid="textblockPhotoACLGroups"
                                       FontStyle="Italic"
                                       FontWeight="Bold"
                                       Visibility="{Binding IsPrivatePhoto, Converter={StaticResource BoolToVisibilityConverter}}"
                                       Margin="28,0,0,0" />
                            
                            <!-- showing the list of all groups while the already allowed groups have a tick in the edge -->
                            <ListBox x:Name="listBoxPrivateSelectedGroups"
                                     ItemsSource="{Binding Groups}"
                                     SelectionMode="Multiple"
                                     Margin="28,4,20,4"
                                     MaxHeight="300"
                                     Visibility="{Binding IsPrivatePhoto, Converter={StaticResource BoolToVisibilityConverter}}"
                                     IsEnabled="{Binding RadioButtonPrivatePostChecked}"
                                     ItemTemplate="{StaticResource FriendicaGroupTemplateACL}" 
                                     local:clsListBoxExtensionsGroups.SelectedItemList="{Binding SelectedGroups, Mode=TwoWay}"
                                     SelectionChanged="listBoxPrivateSelectedGroups_SelectionChanged"/>

                            <TextBlock x:Name="textblockPhotoACLContacts" x:Uid="textblockPhotoACLContacts"
                                       FontStyle="Italic"
                                       FontWeight="Bold"
                                       Visibility="{Binding IsPrivatePhoto, Converter={StaticResource BoolToVisibilityConverter}}"
                                       Margin="28,24,0,0"/>

                            <!-- display some explaining text on access rights on contact level -->
                            <HyperlinkButton x:Name="hyperlinkButtonShowACLContactsHint"
                                             Visibility="{Binding IsPrivatePhoto, Converter={StaticResource BoolToVisibilityConverter}}"
                                             Tapped="hyperlinkButton_Tapped">
                                <HyperlinkButton.Content>
                                    <TextBlock x:Name="textblockPhotoACLContactsHintHeader" x:Uid="textblockPhotoACLContactsHintHeader"
                                               TextWrapping="Wrap"
                                               FontStyle="Italic"
                                               Foreground="Red"
                                               Margin="28,12,12,0" />
                                </HyperlinkButton.Content>
                                <FlyoutBase.AttachedFlyout>
                                    <Flyout Placement="Top">
                                        <StackPanel MaxWidth="300">
                                            <TextBlock x:Name="textblockPhotoACLContactsHint" x:Uid="textblockPhotoACLContactsHint"
                                                       TextWrapping="Wrap" />
                                        </StackPanel>
                                    </Flyout>
                                </FlyoutBase.AttachedFlyout>
                            </HyperlinkButton>
                            
                            <SemanticZoom x:Name="semanticZoomContacts"
                                          Visibility="{Binding IsPrivatePhoto, Converter={StaticResource BoolToVisibilityConverter}}"
                                          Margin="12,12,12,0">
                                <SemanticZoom.ZoomedOutView>
                                    <GridView ScrollViewer.IsVerticalScrollChainingEnabled="False"
                                              ItemTemplate="{StaticResource GridViewZoomOutHeaderTemplate}">
                                    </GridView>
                                </SemanticZoom.ZoomedOutView>

                                <SemanticZoom.ZoomedInView>
                                    <GridView x:Name="listviewPrivateSelectedContacts"
                                              HorizontalAlignment="Left"
                                              SelectionMode="Multiple"
                                              local:clsListBoxExtensions.SelectedItemList="{Binding SelectedContacts, Mode=TwoWay}"
                                              SelectionChanged="listviewPrivateSelectedContacts_SelectionChanged"
                                              ScrollViewer.IsVerticalScrollChainingEnabled="True"
                                              ScrollViewer.VerticalScrollBarVisibility="Visible"
                                              ItemsSource="{Binding Source={StaticResource cvsContacts}, Mode=TwoWay}"
                                              ItemTemplate="{StaticResource FriendicaUserTemplateShort}">
                                        <GridView.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <ItemsWrapGrid Orientation="Horizontal"
                                                               MaximumRowsOrColumns="2"
                                                               Margin="0,0,12,0"/>
                                            </ItemsPanelTemplate>
                                        </GridView.ItemsPanel>
                                        <GridView.GroupStyle>
                                            <GroupStyle HidesIfEmpty="True"
                                                        HeaderTemplate="{StaticResource GridViewHeaderTemplate}">
                                            </GroupStyle>
                                        </GridView.GroupStyle>
                                    </GridView>
                                </SemanticZoom.ZoomedInView>
                            </SemanticZoom>
                        </StackPanel>
                    </ScrollViewer>
                </Grid>
            </Grid>
        </Grid>

    </Grid>
</Page>