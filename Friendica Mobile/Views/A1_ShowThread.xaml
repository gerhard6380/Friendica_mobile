<Page
    x:Class="Friendica_Mobile.Views.A1_ShowThread"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Friendica_Mobile"
    xmlns:views="using:Friendica_Mobile.Views"
    xmlns:mvvm="using:Friendica_Mobile.Mvvm"
    xmlns:triggers="using:Friendica_Mobile.Triggers"
    xmlns:conv="using:Friendica_Mobile.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    x:Name="pageShowThread" x:Uid="pageShowThread">

    <Page.DataContext>
        <mvvm:ShowThreadViewmodel x:Name="pageMvvm" />
    </Page.DataContext>

    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Styles/MainStyles.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <Style TargetType="TextBlock" BasedOn="{StaticResource GenericTextBlockStyle}" />
            <Style TargetType="Grid" BasedOn="{StaticResource GenericGridStyle}" />
            <Style TargetType="ScrollViewer" BasedOn="{StaticResource GenericScrollViewerStyle}" />
            <conv:BoolToVisibilityCollapsedConverter x:Key="BoolToVisibilityCollapsedConverter" />
            <conv:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
            <conv:BoolToPostOpacityConverter x:Key="BoolToPostOpacityConverter" />
        </ResourceDictionary>
    </Page.Resources>

    <Page.TopAppBar>
        <CommandBar x:Name="topAppBar" 
                    Margin="48,0,0,0"
                    Visibility="Visible"
                    HorizontalAlignment="Left">
            <CommandBar.PrimaryCommands>
                <AppBarButton x:Name="topAppBarThreadRefresh" x:Uid="appBarNetworkRefresh" 
                          Icon="Refresh"
                          Command="{Binding RefreshShowThreadCommand}"/>
                <AppBarButton x:Name="topAppBarThreadAdd" x:Uid="appBarNetworkAdd" 
                          Icon="Add" 
                          Click="appBarThreadAdd_Click" />
            </CommandBar.PrimaryCommands>
        </CommandBar>
    </Page.TopAppBar>

    <Page.BottomAppBar>
        <CommandBar x:Name="bottomAppBar" 
                    Margin="{Binding BottomAppBarMargin}"
                    Visibility="Collapsed">
            <AppBarButton x:Name="bottomAppBarThreadRefresh" x:Uid="appBarNetworkRefresh" 
                          Icon="Refresh"
                          Command="{Binding RefreshShowThreadCommand}"/>
            <AppBarButton x:Name="bottomAppBarThreadAdd" x:Uid="appBarNetworkAdd" 
                          Icon="Add" 
                          Click="appBarThreadAdd_Click" />
        </CommandBar>
    </Page.BottomAppBar>


    <Grid>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="WindowStates">
                <VisualState x:Name="MobilePortrait">
                    <VisualState.StateTriggers>
                        <triggers:OrientationDeviceFamilyTrigger OrientationDevice="MobilePortrait" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="textBlockApplicationName.Visibility" Value="Visible" />
                        <Setter Target="textBlockPageName.Visibility" Value="Visible" />
                        <Setter Target="pageShowThread.Margin" Value="0,0,0,0" />
                        <Setter Target="topAppBar.Visibility" Value="Collapsed" />
                        <Setter Target="bottomAppBar.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="MobileLandscape">
                    <VisualState.StateTriggers>
                        <triggers:OrientationDeviceFamilyTrigger OrientationDevice="MobileLandscape" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="textBlockApplicationName.Visibility" Value="Collapsed" />
                        <Setter Target="textBlockPageName.Visibility" Value="Visible" />
                        <Setter Target="textBlockPageName.FontSize" Value="{StaticResource ApplicationNameFontSize}" />
                        <Setter Target="pageShowThread.Margin" Value="0,0,48,0" />
                        <Setter Target="topAppBar.Visibility" Value="Collapsed" />
                        <Setter Target="bottomAppBar.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Desktop">
                    <VisualState.StateTriggers>
                        <triggers:OrientationDeviceFamilyTrigger OrientationDevice="DesktopLandscape" />
                        <triggers:OrientationDeviceFamilyTrigger OrientationDevice="DesktopPortrait" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="textBlockApplicationName.Visibility" Value="Collapsed" />
                        <Setter Target="textBlockPageName.Visibility" Value="Visible" />
                        <Setter Target="textBlockPageName.FontSize" Value="{StaticResource PageNameFontSize}" />
                        <Setter Target="pageShowThread.Margin" Value="0,0,0,0" />
                        <Setter Target="topAppBar.Visibility" Value="Visible" />
                        <Setter Target="bottomAppBar.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <ScrollViewer x:Name="viewerShowThread" 
                      ViewChanged="ScrollViewer_ViewChanged">
            <StackPanel>
                <RelativePanel>
                    <TextBlock x:Name="textBlockApplicationName" x:Uid="textBlockApplicationName" 
                               Visibility="Visible" 
                               Style="{StaticResource ApplicationNameTextBlockStyle}"/>
                    <TextBlock x:Name="textBlockPageName" x:Uid="pageTitleShowThread"  
                               Visibility="Visible" 
                               Style="{StaticResource PageNameTextBlockStyle}" 
                               RelativePanel.Below="textBlockApplicationName"/>
                </RelativePanel>

                <StackPanel x:Name="stackPanelShowThread">
                    <!-- currently loading data, nothing to display yet -->
                    <StackPanel x:Name="stackpanelIsLoadingInitial"
                                Visibility="{Binding IsLoading, Converter={StaticResource BoolToVisibilityConverter}}">
                        <TextBlock x:Name="textblockShowThreadIsLoading" x:Uid="textblockShowThreadIsLoading"
                                   Margin="4,4,4,12"
                                   TextAlignment="Left" />
                        <ProgressBar x:Name="progressShowThreadIsLoading"
                                     IsIndeterminate="True" />
                    </StackPanel>

                    <!-- after loading data, if nothing to display returned -->
                    <StackPanel x:Name="stackpanelNoDataAvailable"
                                Visibility="{Binding NoDataAvailable, Converter={StaticResource BoolToVisibilityConverter}}">
                        <TextBlock x:Name="textblockShowThreadNoData" x:Uid="textblockShowThreadNoData"
                                   Margin="4,4,4,12"
                                   Foreground="Gray"
                                   FontStyle="Italic"
                                   TextAlignment="Left" />
                    </StackPanel>

                    <!-- use conversations look even if there is only one conversation -->
                    <!-- keep name "listviewNetworkPosts" as FriendicaPostsTemplate is referencing on this for width -->
                    <ListView x:Name="listviewNetworkPosts" x:Uid="listviewNetworkPosts"
                              Width="{Binding ListViewWidth}"
                              HorizontalAlignment="Left"
                              ItemsSource="{Binding ShowThread}"
                              Visibility="Visible"
                              SelectionMode="None"
                              ItemTemplate="{StaticResource FriendicaThreadsTemplate}" />
                </StackPanel>
            </StackPanel>
        </ScrollViewer>

        <!-- show button if not on top of page to easily scroll back to the newest entries -->
        <Button x:Name="buttonScrollToTop"
                Margin="0,12,12,0"
                Width="48"
                Height="36"
                VerticalAlignment="Top"
                HorizontalAlignment="Right"
                Visibility="{Binding ShowScrollToTop, Converter={StaticResource BoolToVisibilityConverter}}"
                Tapped="buttonScrollToTop_Tapped">
            <FontIcon Glyph="&#x23F6;" FontSize="36" FontFamily="Segoe UI Emoji"
                      Margin="-8,-8,0,0"
                      Foreground="{Binding ScrollToTopColor}"/>
        </Button>

        <!-- red box indicating that system sends a new post to the server -->
        <RelativePanel Background="Red"
                       VerticalAlignment="Top"
                       HorizontalAlignment="Stretch"
                       Visibility="{Binding IsSendingNewPost, Converter={StaticResource BoolToVisibilityConverter}}">
            <ProgressRing x:Name="progressSendingNewPost"
                          IsActive="True"
                          Foreground="White"
                          Margin="24,0,36,4"
                          HorizontalAlignment="Left"
                          RelativePanel.AlignBottomWithPanel="True"
                          RelativePanel.AlignLeftWithPanel="True"/>
            <TextBlock x:Name="textblockIndicatorSendingNewPost" x:Uid="textblockIndicatorSendingNewPost"
                       Foreground="White"
                       RelativePanel.RightOf="progressSendingNewPost" 
                       RelativePanel.AlignBottomWithPanel="True"/>
        </RelativePanel>

    </Grid>
</Page>