<Page
    x:Class="Friendica_Mobile.Views.A5_InkCanvas"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Friendica_Mobile"
    xmlns:views="using:Friendica_Mobile.Views"
    xmlns:mvvm="using:Friendica_Mobile.Mvvm"
    xmlns:triggers="using:Friendica_Mobile.Triggers"
    xmlns:conv="using:Friendica_Mobile.Converters"
    xmlns:styles="using:Friendica_Mobile.Styles"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    x:Name="pageInkCanvas" x:Uid="pageInkCanvas">

    <Page.DataContext>
        <mvvm:PhotosInkCanvasViewmodel x:Name="pageMvvm" />
    </Page.DataContext>

    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Styles/PhotosStyles.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <Style TargetType="Button" BasedOn="{StaticResource ButtonInkCanvasStyle}" />
        </ResourceDictionary>
    </Page.Resources>

    <Grid x:Name="gridInkCanvasTotalArea" 
          SizeChanged="gridInkCanvasTotalArea_SizeChanged">

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="WindowStates">
                <VisualState x:Name="MobileLandscape">
                    <VisualState.StateTriggers>
                        <triggers:OrientationDeviceFamilyTrigger OrientationDevice="MobileLandscape" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="pageInkCanvas.Margin" Value="0,0,92,0" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <!-- background image on which user wants to draw strokes -->
        <StackPanel x:Name="stackpanelBackgroundForCanvas" 
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center">
            <Border x:Name="borderExistingImage"
                    Background="AntiqueWhite"
                    BorderBrush="LightGray"
                    BorderThickness="2"
                    SizeChanged="borderExistingImage_SizeChanged"
                    Visibility="{Binding IsNewImage, Converter={StaticResource BoolToVisibilityCollapsedConverter}}" >
                <StackPanel Margin="12">
                    <Image x:Name="imageBackgroundForCanvas"
                           Stretch="Uniform"
                           Source="{Binding OriginalImage}"/>
                </StackPanel>
            </Border>

            <!-- white background to draw on if no image was given -->
            <Border x:Name="borderNewImage" 
                    Background="AntiqueWhite"
                    BorderBrush="LightGray"
                    BorderThickness="2"
                    SizeChanged="borderNewImage_SizeChanged"
                    Visibility="{Binding IsNewImage, Converter={StaticResource BoolToVisibilityConverter}}" >
                <Rectangle x:Name="rectNewImage" 
                           Fill="White"
                           Margin="12"/>
            </Border>
        </StackPanel>

        <InkCanvas x:Name="inkCanvas"
                   Loaded="inkCanvas_Loaded"/>

        <StackPanel Margin="0, 48, 0, 0"
                    Height="48"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Top"
                    Orientation="Horizontal">
            <ToggleButton x:Name="toggleButtonsBar" 
                          IsChecked="{Binding IsButtonBarNotVisible, Mode=TwoWay}"
                          Padding="-4"
                          Height="48" Width="36" 
                          Style="{StaticResource ToggleButtonInkCanvasStyle}">
                <Grid>
                    <FontIcon Glyph="&#xE26B;" FontFamily="Segoe MDL2 Assets" FontSize="24" 
                              Visibility="{Binding IsButtonBarNotVisible, Converter={StaticResource BoolToVisibilityConverter}}"/>
                    <FontIcon Glyph="&#xE26C;" FontFamily="Segoe MDL2 Assets" FontSize="24" 
                              Visibility="{Binding IsButtonBarNotVisible, Converter={StaticResource BoolToVisibilityCollapsedConverter}}"/>
                </Grid>
            </ToggleButton>
            <StackPanel x:Name="stackPanelInkButtons"
                        Orientation="Horizontal"
                        Height="48"
                        Visibility="{Binding IsButtonBarNotVisible, Converter={StaticResource BoolToVisibilityCollapsedConverter}}">
                <!-- InkToolbar wird per Code eingefügt, wenn System auf 10.0.14393 oder höher ist -->
                <!-- button for inking -->
                <ToggleButton x:Name="buttonEnableInking"
                              Width="48" Height="48"
                              IsChecked="True"
                              Visibility="{Binding IsInkToolBarPresent, Converter={StaticResource BoolToVisibilityCollapsedConverter}}"
                              Checked="buttonEnableInking_Checked"
                              Unchecked="buttonEnableInking_Checked"
                              Style="{StaticResource ToggleButtonInkCanvasStyle}">
                    <FontIcon Glyph="&#xEE56;" FontFamily="Segoe MDL2 Assets" FontSize="24" />
                </ToggleButton>
                <!-- button for erasing all strokes, opening a flyout for questioning user -->
                <Button x:Name="buttonDeleteStrokes"
                        Width="48" Height="48"
                        Style="{StaticResource ButtonInkCanvasStyle}"
                        Visibility="{Binding IsInkToolBarPresent, Converter={StaticResource BoolToVisibilityCollapsedConverter}}">
                    <FontIcon Glyph="&#xEF17;" FontFamily="Segoe MDL2 Assets" FontSize="24" />
                    <Button.Flyout>
                        <Flyout>
                            <Button x:Name="buttonConfirmDeletion" x:Uid="buttonConfirmDeletion"
                                    Click="buttonConfirmDeletion_Click">
                            </Button>
                        </Flyout>
                    </Button.Flyout>
                </Button>
                <!-- dropdown for pencil settings (thinkness and color) -->
                <Button x:Name="buttonPencilSettings" 
                        Width="48" Height="48"
                        Style="{StaticResource ButtonInkCanvasStyle}"
                        Visibility="{Binding IsInkToolBarPresent, Converter={StaticResource BoolToVisibilityCollapsedConverter}}">
                    <Grid>
                        <FontIcon Glyph="&#xE76D;" FontFamily="Segoe MDL2 Assets" FontSize="24" />
                        <FontIcon Glyph="&#xE88F;" FontFamily="Segoe MDL2 Assets" FontSize="24"                                   
                                  Foreground="{Binding SelectedColor}"/>
                    </Grid>
                    <Button.Flyout>
                        <Flyout>
                            <StackPanel MaxWidth="480">
                                <Slider x:Name="sliderPencilSize"
                                        Minimum="1"
                                        Maximum="48"
                                        Margin="24,0,24,0"
                                        Value="{Binding PencilSize, Mode=TwoWay}"/>
                                <GridView x:Name="gridViewColorSelection"
                                          ItemsSource="{Binding AvailableColors}"
                                          SelectedItem="{Binding SelectedColor, Mode=TwoWay}">
                                    <GridView.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <WrapGrid MaximumRowsOrColumns="6"
                                                      Orientation="Horizontal" />
                                        </ItemsPanelTemplate>
                                    </GridView.ItemsPanel>
                                    <GridView.ItemTemplate>
                                        <DataTemplate>
                                            <Rectangle 
                                                Fill="{Binding}" Width="24" Height="24" />
                                        </DataTemplate>
                                    </GridView.ItemTemplate>
                                </GridView>
                            </StackPanel>
                        </Flyout>
                    </Button.Flyout>
                </Button>
                <!-- button for saving -->
                <Button x:Name="buttonSavingStrokes" x:Uid="buttonSavingStrokes"
                        Width="48" Height="48"
                        Style="{StaticResource ButtonInkCanvasStyle}"
                        Click="buttonSavingStrokes_Click">
                    <FontIcon Glyph="&#xE74E;" FontFamily="Segoe MDL2 Assets" FontSize="24" />
                </Button>
            </StackPanel>

        </StackPanel>

        <!-- warning sign if image uses less than 50% (red sign) or less than 75% (yellow sign) of the available space -->
        <Button x:Name="buttonUsedSpaceWarning"
                VerticalAlignment="Top"
                HorizontalAlignment="Right"
                Visibility="{Binding ShowUsedSpaceWarning, Converter={StaticResource BoolToVisibilityConverter}}"
                Style="{StaticResource ButtonTransparentStyle}">
            <FontIcon Glyph="&#xE814;" FontFamily="Segoe MDL2 Assets" FontSize="24" 
                      Foreground="{Binding UsedSpaceWarningColor}"/>
            <Button.Flyout>
                <Flyout >
                    <TextBlock x:Name="textblockPhotosInkCanvasWarningSign"
                               x:Uid="textblockPhotosInkCanvasWarningSign"
                               MaxWidth="240"
                               TextWrapping="Wrap"/>
                </Flyout>
            </Button.Flyout>
        </Button>

        <!-- red box indicating that app is combining strokes into image -->
        <RelativePanel Background="Red"
                       VerticalAlignment="Top"
                       HorizontalAlignment="Stretch"
                       Margin="4,0,4,0"
                       Visibility="{Binding IsRenderingImage, Converter={StaticResource BoolToVisibilityConverter}}">
            <ProgressRing x:Name="progressPhotoRenderingImage"
                          IsActive="True"
                          Foreground="White"
                          Margin="36,0,36,4"
                          RelativePanel.AlignVerticalCenterWithPanel="True"
                          RelativePanel.AlignLeftWithPanel="True"/>
            <TextBlock x:Name="textblockPhotosRenderingImage" x:Uid="textblockPhotosRenderingImage"
                       Foreground="White"
                       TextWrapping="Wrap"
                       RelativePanel.RightOf="progressPhotoRenderingImage" 
                       RelativePanel.AlignVerticalCenterWithPanel="True" />
        </RelativePanel>

    </Grid>
</Page>