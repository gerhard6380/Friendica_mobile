<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:contract5Present="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract,5)"
    xmlns:contract5NotPresent="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractNotPresent(Windows.Foundation.UniversalApiContract,5)"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- design reference http://osguni/?id=19359&Background=19361 -->
    
    <!-- temporary solution until generic.xaml is updated -->
    <!--<Color x:Key="SystemListAccentLowColor">#FF004780</Color>
    <Color x:Key="SystemListAccentMediumColor">#FF005FAB</Color>
    <Color x:Key="SystemListAccentHighColor">#FF006BC0</Color>-->

    <!--<SolidColorBrush x:Key="SplitViewBackgroundBrush" Color="{ThemeResource SystemBaseMediumColor}" />-->
    <SolidColorBrush x:Key="SplitViewBackgroundBrush" Color="DarkGray" />
    <SolidColorBrush x:Key="SplitViewForegroundBrush" 
                     contract5Present:Color="{StaticResource SystemBaseHighColor}"
                     contract5NotPresent:Color="Black"/>
    <SolidColorBrush x:Key="RadioButtonContentDisabledForegroundThemeBrush" Color="DarkGray" />
    <SolidColorBrush x:Key="NavButtonPressedBackgroundBrush" Color="{ThemeResource SystemListMediumColor}" />
    <SolidColorBrush x:Key="NavButtonHoverBackgroundBrush" Color="{ThemeResource SystemListLowColor}" />
    <SolidColorBrush x:Key="NavButtonCheckedBackgroundBrush" Color="{ThemeResource SystemListAccentLowColor}" />
    <SolidColorBrush x:Key="NavButtonCheckedPressedBackgroundBrush" Color="{ThemeResource SystemListAccentMediumColor}" />
    <SolidColorBrush x:Key="NavButtonCheckedHoverBackgroundBrush" Color="{ThemeResource SystemListAccentHighColor}" />

    <contract5Present:AcrylicBrush x:Key="FriendicaBackgroundAcrylicWindowBrush" 
                                   BackgroundSource="HostBackdrop" 
                                   TintColor="{StaticResource SystemChromeAltHighColor}" 
                                   TintOpacity="0.8" 
                                   FallbackColor="{StaticResource SystemChromeMediumColor}" />

    <x:Double x:Key="SplitViewNormalNavFontSize">16</x:Double>
    <x:Double x:Key="SplitViewLargeNavFontSize">20</x:Double>
    <x:Double x:Key="SplitViewBackButtonHeight">32</x:Double>
    <x:String x:Key="BackButtonText"></x:String>
    <x:String x:Key="ForwardButtonText"></x:String>
    <x:String x:Key="MenuButtonText"></x:String>

    <Style TargetType="SplitView">
        <Setter Property="IsPaneOpen" Value="False" />
        <Setter Property="OpenPaneLength" Value="320" />
        <Setter Property="CompactPaneLength" Value="48" />
        <Setter Property="FlowDirection" Value="LeftToRight" />
        <!--<Setter Property="PaneBackground" Value="{ThemeResource SplitViewBackgroundBrush}" />-->
        <!--<Setter Property="PaneBackground" Value="{StaticResource SystemControlBaseHighAcrylicWindowBrush}" />-->
        <Setter Property="DisplayMode" Value="CompactOverlay" />
        <Setter Property="RequestedTheme" Value="Default" />
    </Style>

    <Style TargetType="TextBlock" x:Key="SplitViewTextBlockStyle">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="Segoe MDL2 Assets" />
        <Setter Property="Foreground" Value="{StaticResource SplitViewForegroundBrush}" />
        <Setter Property="FontSize" Value="{ThemeResource SplitViewNormalNavFontSize}" />
    </Style>

    <Style TargetType="Button" x:Key="SplitViewButtonStyle">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{ThemeResource SplitViewForegroundBrush}" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
            <ControlTemplate TargetType="Button">
                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                    <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup x:Name="CommonStates">
                             <VisualState x:Name="Normal" />
                            <VisualState x:Name="PointerOver">
                                <Storyboard>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="HoverBackground">
                                        <DiscreteObjectKeyFrame KeyTime="0">
                                            <DiscreteObjectKeyFrame.Value>
                                                <Visibility>Visible</Visibility>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CheckedHoverBackground">
                                        <DiscreteObjectKeyFrame KeyTime="0">
                                            <DiscreteObjectKeyFrame.Value>
                                                <Visibility>Visible</Visibility>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Pressed">
                                <Storyboard>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedBackground">
                                        <DiscreteObjectKeyFrame KeyTime="0">
                                            <DiscreteObjectKeyFrame.Value>
                                                <Visibility>Visible</Visibility>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CheckedPressedBackground">
                                        <DiscreteObjectKeyFrame KeyTime="0">
                                            <DiscreteObjectKeyFrame.Value>
                                                <Visibility>Visible</Visibility>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Disabled">
                                <Storyboard>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="NixonGlyph" Storyboard.TargetProperty="Foreground">
                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource RadioButtonContentDisabledForegroundThemeBrush}" />
                                    </ObjectAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource RadioButtonContentDisabledForegroundThemeBrush}" />
                                    </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                            </VisualState>
                        </VisualStateGroup>
                        <VisualStateGroup x:Name="CheckStates">
                            <VisualState x:Name="Checked">
                                <Storyboard>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CheckedBackground">
                                        <DiscreteObjectKeyFrame KeyTime="0">
                                            <DiscreteObjectKeyFrame.Value>
                                                <Visibility>Visible</Visibility>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Unchecked" />
                            <VisualState x:Name="Indeterminate" />
                        </VisualStateGroup>
                        <VisualStateGroup x:Name="FocusStates">
                            <VisualState x:Name="Focused">
                                <Storyboard>
                                    <DoubleAnimation Duration="0" Storyboard.TargetName="FocusVisualWhite" Storyboard.TargetProperty="Opacity" To="1" />
                                    <DoubleAnimation Duration="0" Storyboard.TargetName="FocusVisualBlack" Storyboard.TargetProperty="Opacity" To="1" />
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Unfocused" />
                            <VisualState x:Name="PointerFocused" />
                        </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>
                    <Grid>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="48" />
                        </Grid.RowDefinitions>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="48" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="20" />
                        </Grid.ColumnDefinitions>

                        <Grid.Resources>
                            <Style TargetType="Rectangle" x:Name="FocusVisual">
                                <Setter Property="Opacity" Value="0" />
                                <Setter Property="StrokeDashArray" Value="1,1" />
                                <Setter Property="StrokeEndLineCap" Value="Square" />
                            </Style>
                        </Grid.Resources>

                        <!-- background -->

                        <Grid x:Name="NotCheckedBackground" Grid.ColumnSpan="4">
                            <Rectangle x:Name="PressedBackground" Visibility="Collapsed" Fill="{StaticResource NavButtonPressedBackgroundBrush}"/>
                            <Rectangle x:Name="HoverBackground" Visibility="Collapsed" Fill="{StaticResource NavButtonHoverBackgroundBrush}"/>
                        </Grid>
                        <Grid x:Name="CheckedBackground" Grid.ColumnSpan="4" Visibility="Collapsed" Background="{StaticResource NavButtonCheckedBackgroundBrush}">
                            <Rectangle x:Name="CheckedPressedBackground" Visibility="Collapsed" Fill="{StaticResource NavButtonCheckedPressedBackgroundBrush}"/>
                            <Rectangle x:Name="CheckedHoverBackground" Visibility="Collapsed" Fill="{StaticResource NavButtonCheckedHoverBackgroundBrush}"/>
                        </Grid>

                        <!-- focus -->
                        <Rectangle x:Name="FocusVisualWhite" Stroke="{ThemeResource FocusVisualWhiteStrokeThemeBrush}" StrokeDashOffset="1.5" Style="{StaticResource FocusVisual}" />
                        <Rectangle x:Name="FocusVisualBlack" Stroke="{ThemeResource FocusVisualBlackStrokeThemeBrush}" StrokeDashOffset="0.5" Style="{StaticResource FocusVisual}" />

                        <!-- glyph -->
                        <ContentPresenter x:Name="NixonGlyph" Content="{TemplateBinding Tag}" />

                        <!-- text -->
                        <ContentPresenter x:Name="ContentPresenter"
                        			Grid.Column="1"
                        			Margin="{TemplateBinding Padding}"
                        			HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        			VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        			AutomationProperties.AccessibilityView="Raw"
                        			Content="{TemplateBinding Content}"
                        			ContentTemplate="{TemplateBinding ContentTemplate}"
                        			ContentTransitions="{TemplateBinding ContentTransitions}" />
                    </Grid>
                </Border>
            </ControlTemplate>
        </Setter.Value>
        </Setter>

    </Style>

    <Style TargetType="RadioButton" x:Key="SplitViewRadioButtonStyle">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource SplitViewForegroundBrush}" />
        <Setter Property="Padding" Value="1,4,0,0" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <!--BorderBrush="{TemplateBinding BorderBrush}"
                    Background="{StaticResource SystemControlBaseHighAcrylicWindowBrush}" 
                    Background="{TemplateBinding Background}"-->
                    <Border contract5Present:Background="{StaticResource FriendicaBackgroundAcrylicWindowBrush}"
                            contract5NotPresent:Background="{TemplateBinding Background}" 
                            contract5NotPresent:BorderBrush="{TemplateBinding BorderBrush}"
                            contract5Present:BorderBrush="{ThemeResource ButtonRevealBorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <!--<VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="HoverBackground">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CheckedHoverBackground">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>-->
                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="NotCheckedBackground.(RevealBrush.State)" Value="PointerOver" />
                                        <Setter Target="NotCheckedBackground.Background" 
                                                contract5Present:Value="{ThemeResource ButtonRevealBackgroundPointerOver}"
                                                contract5NotPresent:Value="LightGray"/>
                                        <Setter Target="ContentPresenter.BorderBrush" 
                                                contract5Present:Value="{ThemeResource ButtonRevealBorderBrush}" 
                                                contract5NotPresent:Value="LightGray"/>
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ButtonForegroundPointerOver}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedBackground">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CheckedPressedBackground">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="NixonGlyph" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource RadioButtonContentDisabledForegroundThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource RadioButtonContentDisabledForegroundThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CheckedBackground">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Indeterminate" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="FocusVisualWhite" Storyboard.TargetProperty="Opacity" To="1" />
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="FocusVisualBlack" Storyboard.TargetProperty="Opacity" To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="PointerFocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>

                            <Grid.RowDefinitions>
                                <RowDefinition Height="48" />
                            </Grid.RowDefinitions>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="48" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="20" />
                            </Grid.ColumnDefinitions>

                            <Grid.Resources>
                                <Style TargetType="Rectangle" x:Name="FocusVisual">
                                    <Setter Property="Opacity" Value="0" />
                                    <Setter Property="StrokeDashArray" Value="1,1" />
                                    <Setter Property="StrokeEndLineCap" Value="Square" />
                                </Style>
                            </Grid.Resources>

                            <!-- background -->

                            <Grid x:Name="NotCheckedBackground" Grid.ColumnSpan="4">
                                <Rectangle x:Name="PressedBackground" Visibility="Collapsed" Fill="{StaticResource NavButtonPressedBackgroundBrush}"/>
                                <Rectangle x:Name="HoverBackground" Visibility="Collapsed" Fill="{StaticResource NavButtonHoverBackgroundBrush}"/>
                            </Grid>
                            <Grid x:Name="CheckedBackground" Grid.ColumnSpan="4" Visibility="Collapsed" Background="{StaticResource NavButtonCheckedBackgroundBrush}">
                                <Rectangle x:Name="CheckedPressedBackground" Visibility="Collapsed" Fill="{StaticResource NavButtonCheckedPressedBackgroundBrush}"/>
                                <Rectangle x:Name="CheckedHoverBackground" Visibility="Collapsed" Fill="{StaticResource NavButtonCheckedHoverBackgroundBrush}"/>
                            </Grid>

                            <!-- focus -->
                            <Rectangle x:Name="FocusVisualWhite" Stroke="{ThemeResource FocusVisualWhiteStrokeThemeBrush}" StrokeDashOffset="1.5" Style="{StaticResource FocusVisual}" />
                            <Rectangle x:Name="FocusVisualBlack" Stroke="{ThemeResource FocusVisualBlackStrokeThemeBrush}" StrokeDashOffset="0.5" Style="{StaticResource FocusVisual}" />

                            <!-- glyph -->
                            <ContentPresenter x:Name="NixonGlyph" Content="{TemplateBinding Tag}" />

                            <!-- text -->
                            <ContentPresenter x:Name="ContentPresenter"
                        			Grid.Column="1"
                        			Margin="{TemplateBinding Padding}"
                        			HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        			VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        			AutomationProperties.AccessibilityView="Raw"
                        			Content="{TemplateBinding Content}"
                        			ContentTemplate="{TemplateBinding ContentTemplate}"
                        			ContentTransitions="{TemplateBinding ContentTransitions}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    

</ResourceDictionary>
